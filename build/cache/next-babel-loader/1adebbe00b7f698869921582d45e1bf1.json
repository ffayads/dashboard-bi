{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport Router from 'next/router';\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport NotificationAlert from \"react-notification-alert\";\nimport AdminNavbar from \"../components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"../components/Footer/Footer.jsx\";\nimport Sidebar from \"../components/Sidebar/Sidebar.jsx\";\nimport routes from \"../variables/routes\";\nimport { ContextOne } from '../context/global';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nvar ps;\n\nconst Admin = props => {\n  const {\n    state,\n    dispatch\n  } = React.useContext(ContextOne);\n  const [activeColor, set1] = React.useState(\"blue\");\n  const [sidebarMini, set2] = React.useState(false);\n  const [opacity, set3] = React.useState(0);\n  const [sidebarOpened, set4] = React.useState(false);\n  let mainPanel = React.useRef();\n  let notificationAlert = React.useRef();\n\n  let getActiveRoute = () => {};\n\n  let showNavbarButton = () => {};\n\n  let getRoutes = () => {};\n\n  let handleMiniClick = () => {};\n\n  let toggleSidebar = () => {};\n\n  let closeSidebar = () => {};\n\n  if (state.load || cookies.get(\"Token\") === \"\" || cookies.get(\"Token\") === undefined) {\n    return \"...\";\n  }\n\n  if (typeof window['DocumentTouch'] === 'undefined') {\n    window['DocumentTouch'] = HTMLDocument;\n  }\n\n  if (navigator.platform.indexOf(\"Win\") > -1) {\n    document.documentElement.className += \" perfect-scrollbar-on\";\n    document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n    ps = new PerfectScrollbar(mainPanel);\n    let tables = document.querySelectorAll(\".table-responsive\");\n\n    for (let i = 0; i < tables.length; i++) {\n      ps = new PerfectScrollbar(tables[i]);\n    }\n  }\n\n  window.addEventListener(\"scroll\", showNavbarButton);\n\n  showNavbarButton = () => {\n    if (document.documentElement.scrollTop > 50 || document.scrollingElement.scrollTop > 50 || mainPanel.scrollTop > 50) {\n      set3(1);\n    } else if (document.documentElement.scrollTop <= 50 || document.scrollingElement.scrollTop <= 50 || mainPanel.scrollTop <= 50) {\n      set3(0);\n    }\n  };\n\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n\n      if (prop.layout === \"/admin\") {\n        return __jsx(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component,\n          key: key\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  getActiveRoute = routes => {\n    let activeRoute = \"Default Brand Text\";\n\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (window.location.pathname.indexOf(routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n    }\n\n    return activeRoute;\n  };\n\n  handleMiniClick = () => {\n    if (document.body.classList.contains(\"sidebar-mini\")) {\n      set2(false);\n    } else {\n      set2(true);\n    }\n\n    document.body.classList.toggle(\"sidebar-mini\");\n  };\n\n  toggleSidebar = () => {\n    set4(!sidebarOpened);\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n\n  closeSidebar = () => {\n    set4(false);\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(\"div\", {\n    className: \"rna-container\"\n  }, __jsx(NotificationAlert, {\n    ref: notificationAlert\n  })), __jsx(\"div\", {\n    className: \"navbar-minimize-fixed\",\n    style: {\n      opacity: opacity\n    }\n  }, __jsx(\"button\", {\n    className: \"minimize-sidebar btn btn-link btn-just-icon\",\n    onClick: () => handleMiniClick()\n  }, __jsx(\"i\", {\n    className: \"tim-icons icon-align-center visible-on-sidebar-regular text-muted\"\n  }), __jsx(\"i\", {\n    className: \"tim-icons icon-bullet-list-67 visible-on-sidebar-mini text-muted\"\n  }))), __jsx(Sidebar, _extends({}, props, {\n    routes: routes,\n    activeColor: activeColor,\n    logo: {\n      outterLink: \"https://google.com\",\n      text: \"Via 40 Express\",\n      imgSrc: \"/img/Logo.png\"\n    },\n    closeSidebar: closeSidebar\n  })), __jsx(\"div\", {\n    className: \"main-panel\",\n    ref: mainPanel,\n    data: activeColor\n  }, __jsx(AdminNavbar, _extends({}, props, {\n    handleMiniClick: handleMiniClick,\n    brandText: getActiveRoute(routes),\n    sidebarOpened: sidebarOpened,\n    toggleSidebar: toggleSidebar\n  })), props.children, __jsx(Footer, {\n    fluid: true\n  })));\n};\n\nexport default Admin;","map":null,"metadata":{},"sourceType":"module"}