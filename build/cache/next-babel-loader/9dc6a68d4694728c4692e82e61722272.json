{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Router from 'next/router';\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport NotificationAlert from \"react-notification-alert\";\nimport AdminNavbar from \"../components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"../components/Footer/Footer.jsx\";\nimport Sidebar from \"../components/Sidebar/Sidebar.jsx\";\nimport routes from \"../variables/routes\";\nimport { ContextOne } from '../context/global';\nimport Cookies from 'universal-cookie';\nvar cookies = new Cookies();\nvar ps;\n\nvar Admin = function Admin(props) {\n  var _React$useContext = React.useContext(ContextOne),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var _React$useState = React.useState(\"blue\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeColor = _React$useState2[0],\n      set1 = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      sidebarMini = _React$useState4[0],\n      set2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      opacity = _React$useState6[0],\n      set3 = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      sidebarOpened = _React$useState8[0],\n      set4 = _React$useState8[1];\n\n  var mainPanel = React.useRef();\n  var notificationAlert = React.useRef();\n\n  var getActiveRoute = function getActiveRoute() {};\n\n  var showNavbarButton = function showNavbarButton() {};\n\n  var getRoutes = function getRoutes() {};\n\n  var handleMiniClick = function handleMiniClick() {};\n\n  var toggleSidebar = function toggleSidebar() {};\n\n  var closeSidebar = function closeSidebar() {};\n\n  if (state.load || cookies.get(\"Token\") === \"\" || cookies.get(\"Token\") === undefined) {\n    return \"...\";\n  }\n\n  if (typeof window['DocumentTouch'] === 'undefined') {\n    window['DocumentTouch'] = HTMLDocument;\n  }\n\n  if (navigator.platform.indexOf(\"Win\") > -1) {\n    document.documentElement.className += \" perfect-scrollbar-on\";\n    document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n    ps = new PerfectScrollbar(mainPanel);\n    var tables = document.querySelectorAll(\".table-responsive\");\n\n    for (var i = 0; i < tables.length; i++) {\n      ps = new PerfectScrollbar(tables[i]);\n    }\n  }\n\n  window.addEventListener(\"scroll\", showNavbarButton);\n\n  showNavbarButton = function showNavbarButton() {\n    if (document.documentElement.scrollTop > 50 || document.scrollingElement.scrollTop > 50 || mainPanel.scrollTop > 50) {\n      set3(1);\n    } else if (document.documentElement.scrollTop <= 50 || document.scrollingElement.scrollTop <= 50 || mainPanel.scrollTop <= 50) {\n      set3(0);\n    }\n  };\n\n  getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.collapse) {\n        return _this.getRoutes(prop.views);\n      }\n\n      if (prop.layout === \"/admin\") {\n        return __jsx(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component,\n          key: key\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  getActiveRoute = function getActiveRoute(routes) {\n    var activeRoute = \"Default Brand Text\";\n\n    for (var _i = 0; _i < routes.length; _i++) {\n      if (routes[_i].collapse) {\n        var collapseActiveRoute = _this.getActiveRoute(routes[_i].views);\n\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (window.location.pathname.indexOf(routes[_i].path) !== -1) {\n          return routes[_i].name;\n        }\n      }\n    }\n\n    return activeRoute;\n  };\n\n  handleMiniClick = function handleMiniClick() {\n    if (document.body.classList.contains(\"sidebar-mini\")) {\n      set2(false);\n    } else {\n      set2(true);\n    }\n\n    document.body.classList.toggle(\"sidebar-mini\");\n  };\n\n  toggleSidebar = function toggleSidebar() {\n    set4(!sidebarOpened);\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n\n  closeSidebar = function closeSidebar() {\n    set4(false);\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(\"div\", {\n    className: \"rna-container\"\n  }, __jsx(NotificationAlert, {\n    ref: notificationAlert\n  })), __jsx(\"div\", {\n    className: \"navbar-minimize-fixed\",\n    style: {\n      opacity: opacity\n    }\n  }, __jsx(\"button\", {\n    className: \"minimize-sidebar btn btn-link btn-just-icon\",\n    onClick: function onClick() {\n      return handleMiniClick();\n    }\n  }, __jsx(\"i\", {\n    className: \"tim-icons icon-align-center visible-on-sidebar-regular text-muted\"\n  }), __jsx(\"i\", {\n    className: \"tim-icons icon-bullet-list-67 visible-on-sidebar-mini text-muted\"\n  }))), __jsx(Sidebar, _extends({}, props, {\n    routes: routes,\n    activeColor: activeColor,\n    logo: {\n      outterLink: \"https://google.com\",\n      text: \"Via 40 Express\",\n      imgSrc: \"/img/Logo.png\"\n    },\n    closeSidebar: closeSidebar\n  })), __jsx(\"div\", {\n    className: \"main-panel\",\n    ref: mainPanel,\n    data: activeColor\n  }, __jsx(AdminNavbar, _extends({}, props, {\n    handleMiniClick: handleMiniClick,\n    brandText: getActiveRoute(routes),\n    sidebarOpened: sidebarOpened,\n    toggleSidebar: toggleSidebar\n  })), props.children, __jsx(Footer, {\n    fluid: true\n  })));\n};\n\nexport default Admin;","map":null,"metadata":{},"sourceType":"module"}