{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/pages/map/content.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Card, CardTitle, CardBody, Row, Col, CardHeader, Button, Form } from 'reactstrap';\nimport { Marker, InfoWindow } from 'google-maps-react';\nimport Select from \"react-select\";\nimport Maps from '../../components/Maps/map';\nimport { getMap } from '../../Utlis/get';\nimport Modal from '../../components/Modal/modal';\nimport { orientation, multiSelectType } from '../../variables/varGeneral';\n\nconst content = props => {\n  const [data, setData] = React.useState({\n    center: {\n      lat: 4.3364601,\n      lng: -74.3637772\n    },\n    zoom: 11\n  });\n  const initialCenter = {\n    lat: 4.3364601,\n    lng: -74.3637772\n  };\n  const [modal, setModal] = React.useState(false);\n  const [modalInfo, setModalInfo] = React.useState(false);\n  const [multipleSelect, setMultipleSelect] = React.useState(multiSelectType());\n  React.useEffect(() => {\n    let query = [];\n\n    if (multipleSelect !== null) {\n      multipleSelect.map(e => {\n        query.push(parseInt(e.value));\n      });\n    }\n\n    getMap(query).then(response => {\n      if (response !== undefined) {\n        if (response.status) {\n          setData(_objectSpread({}, data, {\n            marks: response.data.reports\n          }));\n        } else {\n          setData(_objectSpread({}, data, {\n            marks: []\n          }));\n        }\n      }\n    });\n  }, [multipleSelect]);\n  React.useEffect(() => {\n    if (!modalInfo) setData(_objectSpread({}, data, {\n      zoom: 9,\n      center: initialCenter\n    }));\n  }, [modalInfo]);\n\n  const onMarkerClick = (props, marker, e) => {\n    setData(_objectSpread({}, data, {\n      dataInfo: props,\n      center: {\n        lat: props.data.Lat,\n        lng: props.data.Lon\n      },\n      zoom: 18\n    }));\n    setModal(false);\n    setModalInfo(true);\n  };\n\n  const getContent = () => {\n    if (data.marks !== undefined) {\n      return data.marks.map((elem, i) => {\n        let options = {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n          hour12: \"false\"\n        };\n        elem['Date'] = new Date(elem.Time).toLocaleDateString(\"es-CO\", options);\n        elem['Hour'] = new Date(elem.Time).getUTCHours() + \":\" + new Date(elem.Time).getUTCMinutes();\n        return __jsx(Marker, {\n          key: \"mark_\" + i,\n          onClick: onMarkerClick,\n          data: elem,\n          position: {\n            lat: elem.Lat,\n            lng: elem.Lon\n          },\n          className: \"tim-icons icon-alert-circle-exc\",\n          icon: {\n            //url: \"/img/reports/1.jpg\",\n            url: \"/img/reports/\" + elem.TypeReportID + \".jpg\",\n            anchor: {\n              x: 12,\n              y: 12\n            },\n            scaledSize: {\n              width: 30,\n              height: 30,\n              i: undefined,\n              g: undefined\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        });\n      });\n    }\n  };\n\n  const getModal = () => {\n    if (modal) {\n      return data.marks.map((elem, i) => {\n        return __jsx(Row, {\n          key: \"row_\" + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, __jsx(Col, {\n          xs: 6,\n          key: \"head_e_\" + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }\n        }, elem.TypeReport), __jsx(Col, {\n          xs: 6,\n          key: \"body_e_\" + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }\n        }, __jsx(Button, {\n          key: \"buton_e_\" + i,\n          color: \"info\",\n          className: \"animation-on-hover\",\n          onClick: e => {\n            onMarkerClick({\n              data: elem,\n              position: {\n                lat: elem.Lat,\n                lng: elem.Lon\n              }\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }\n        }, \"Ver\")));\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, __jsx(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    color: \"info\",\n    className: \"animation-on-hover\",\n    onClick: () => {\n      setModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, \"Lista Eventos\")), __jsx(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, __jsx(Select, {\n    className: \"react-select info\",\n    classNamePrefix: \"react-select\",\n    placeholder: \"Tipo de reporte\",\n    closeMenuOnSelect: false,\n    isMulti: true,\n    value: multipleSelect,\n    onChange: value => setMultipleSelect(value),\n    options: multiSelectType(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  })))), __jsx(CardBody, {\n    id: \"map\",\n    style: {\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, __jsx(Maps, {\n    initialCenter: initialCenter,\n    center: data.center,\n    zoom: data.zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, getContent()))))), __jsx(Modal, {\n    modal: modal,\n    setModal: setModal,\n    title: \"Lista de eventos\",\n    key: \"modal_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, getModal()), __jsx(Modal, {\n    modal: modalInfo,\n    setModal: setModalInfo,\n    title: modalInfo ? \"Evento  \" + data.dataInfo.data.TypeReport : \"Evento ...\",\n    Draggable: true,\n    key: \"modal_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, modalInfo ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, data.dataInfo.data.Image !== \"\" ? __jsx(\"img\", {\n    src: data.dataInfo.data.Image,\n    alt: \"...\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }) : \"Sin imagen para mostrar.\", __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 32\n    }\n  }, \"Fecha: \"), data.dataInfo.data.Date), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 32\n    }\n  }, \"Hora :\"), \" \", data.dataInfo.data.Hour, \" - (24 Horas)\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 32\n    }\n  }, \"Sentido :\"), \" \", orientation[data.dataInfo.data.Orientation]), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 32\n    }\n  }, \"Latitud: \"), data.dataInfo.data.Lat, \"  - \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 76\n    }\n  }, \"Longitud: \"), data.dataInfo.data.Lon)) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 27\n    }\n  }, \"...\"))));\n};\n\nexport default content;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/pages/map/content.jsx"],"names":["React","Card","CardTitle","CardBody","Row","Col","CardHeader","Button","Form","Marker","InfoWindow","Select","Maps","getMap","Modal","orientation","multiSelectType","content","props","data","setData","useState","center","lat","lng","zoom","initialCenter","modal","setModal","modalInfo","setModalInfo","multipleSelect","setMultipleSelect","useEffect","query","map","e","push","parseInt","value","then","response","undefined","status","marks","reports","onMarkerClick","marker","dataInfo","Lat","Lon","getContent","elem","i","options","weekday","year","month","day","hour12","Date","Time","toLocaleDateString","getUTCHours","getUTCMinutes","url","TypeReportID","anchor","x","y","scaledSize","width","height","g","getModal","TypeReport","position","overflow","Image","Hour","Orientation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardTitle, CardBody, Row, Col, CardHeader, Button, Form } from 'reactstrap';\nimport { Marker, InfoWindow } from 'google-maps-react';\nimport Select from \"react-select\";\nimport Maps from '../../components/Maps/map';\nimport { getMap } from '../../Utlis/get';\nimport Modal from '../../components/Modal/modal';\nimport { orientation, multiSelectType } from '../../variables/varGeneral';\n\nconst content = (props) => {\n    const [data, setData] = React.useState({\n        center: { lat: 4.3364601, lng: -74.3637772 },\n        zoom: 11,\n    });\n    const initialCenter = { lat: 4.3364601, lng: -74.3637772 };\n    const [modal, setModal] = React.useState(false);\n    const [modalInfo, setModalInfo] = React.useState(false);\n    const [multipleSelect, setMultipleSelect] = React.useState(multiSelectType());\n\n    React.useEffect(() => {\n        let query = [];\n        if (multipleSelect !== null) {\n            multipleSelect.map((e) => {\n                query.push(parseInt(e.value))\n            });\n        }\n        getMap(query).then((response) => {\n            if (response !== undefined) {\n                if (response.status) {\n                    setData({ ...data, marks: response.data.reports });\n                } else {\n                    setData({ ...data, marks: [] });\n                }\n            }\n        })\n    }, [multipleSelect]);\n\n    React.useEffect(() => {\n        if (!modalInfo) setData({ ...data, zoom: 9, center: initialCenter })\n    }, [modalInfo])\n\n    const onMarkerClick = (props, marker, e) => {\n        setData({\n            ...data,\n            dataInfo: props,\n            center: { lat: props.data.Lat, lng: props.data.Lon },\n            zoom: 18,\n        });\n        setModal(false);\n        setModalInfo(true);\n    }\n\n    const getContent = () => {\n        if (data.marks !== undefined) {\n            return data.marks.map((elem, i) => {\n                let options = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\", hour12: \"false\" };\n                elem['Date'] = new Date(elem.Time).toLocaleDateString(\"es-CO\", options);\n                elem['Hour'] = new Date(elem.Time).getUTCHours() + \":\" + new Date(elem.Time).getUTCMinutes();\n                return (\n                    <Marker\n                        key={\"mark_\" + i}\n                        onClick={onMarkerClick}\n                        data={elem}\n                        position={{ lat: elem.Lat, lng: elem.Lon }}\n                        className=\"tim-icons icon-alert-circle-exc\"\n                        icon={{\n                            //url: \"/img/reports/1.jpg\",\n                            url: \"/img/reports/\" + elem.TypeReportID + \".jpg\",\n                            anchor: { x: 12, y: 12 },\n                            scaledSize: { width: 30, height: 30, i: undefined, g: undefined }\n                        }}\n                    />\n                )\n            })\n        }\n    }\n\n    const getModal = () => {\n        if (modal) {\n            return data.marks.map((elem, i) => {\n                return (\n                    <Row key={\"row_\" + i}>\n                        <Col xs={6} key={\"head_e_\" + i}>\n                            {elem.TypeReport}\n                        </Col>\n                        <Col xs={6} key={\"body_e_\" + i}>\n                            <Button\n                                key={\"buton_e_\" + i}\n                                color=\"info\"\n                                className=\"animation-on-hover\"\n                                onClick={(e) => {\n                                    onMarkerClick(\n                                        {\n                                            data: elem,\n                                            position: { lat: elem.Lat, lng: elem.Lon }\n                                        }\n                                    )\n                                }}\n                            >\n                                {\"Ver\"}\n                            </Button>\n                        </Col>\n                    </Row>\n                )\n            })\n        }\n    }\n\n    return (\n        <>\n            <div className=\"content\">\n                <Row>\n                    <Col xs={12}>\n                        <Card>\n                            <CardHeader>\n                                {/* <CardTitle>Mapa</CardTitle> */}\n                                <Row>\n                                    <Col >\n                                        <Button color=\"info\" className=\"animation-on-hover\" onClick={() => { setModal(true) }}>Lista Eventos</Button>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <Select\n                                            className=\"react-select info\"\n                                            classNamePrefix=\"react-select\"\n                                            placeholder=\"Tipo de reporte\"\n                                            closeMenuOnSelect={false}\n                                            isMulti\n                                            value={multipleSelect}\n                                            onChange={value => setMultipleSelect(value)}\n                                            options={multiSelectType()}\n                                        />\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody id={\"map\"} style={{ position: \"relative\", overflow: \"hidden\" }} >\n                                <Maps\n                                    initialCenter={initialCenter}\n                                    center={data.center}\n                                    zoom={data.zoom} >\n                                    {getContent()}\n                                </Maps>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Modal modal={modal} setModal={setModal} title={\"Lista de eventos\"} key={\"modal_1\"}>\n                    {getModal()}\n                </Modal>\n                <Modal modal={modalInfo} setModal={setModalInfo} title={modalInfo ? \"Evento  \" + data.dataInfo.data.TypeReport : \"Evento ...\"} Draggable={true} key={\"modal_2\"}>\n                    {modalInfo ?\n                        <div >\n                            {data.dataInfo.data.Image !== \"\" ?\n                                <img src={data.dataInfo.data.Image} alt={\"...\"} style={{ width: \"100%\" }} />\n                                : \"Sin imagen para mostrar.\"\n                            }\n                            <p><b>Fecha: </b>{data.dataInfo.data.Date}</p>\n                            <p><b>Hora :</b> {data.dataInfo.data.Hour} - (24 Horas)</p>\n                            <p><b>Sentido :</b> {orientation[data.dataInfo.data.Orientation]}</p>\n                            <p><b>Latitud: </b>{data.dataInfo.data.Lat}  - <b>Longitud: </b>{data.dataInfo.data.Lon}</p>\n                        </div>\n                        : <p>...</p>}\n                </Modal>\n            </div>\n        </>\n    )\n}\nexport default content;\n"]},"metadata":{},"sourceType":"module"}