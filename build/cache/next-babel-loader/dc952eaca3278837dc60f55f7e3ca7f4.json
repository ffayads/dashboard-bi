{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport swal from 'sweetalert';\nimport { ContextOne } from '../context/global';\nvar cookies = new Cookies();\nexport var getMap = function getMap(data, dispatch) {\n  return _regeneratorRuntime.async(function getMap$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"/authAdmin/maps/GetReports\", {}).then(function (response) {\n            var data = response.data;\n\n            if (response.status === 200) {\n              return data;\n            } else {\n              swal(\"Alerta!\", response.statusText, \"warning\");\n              return {\n                \"\": \"\"\n              };\n            }\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getReports = function getReports() {\n  var props,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function getReports$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          props = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"/authAdmin/search/GetReports\", props).then(function (response) {\n            var data = response.data;\n\n            if (response.status === 200) {\n              return data;\n            } else {\n              swal(\"Alerta!\", response.statusText, \"warning\");\n            }\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar info = function info() {\n  return \"Utils for query get type \";\n};\n\nexport default info;","map":null,"metadata":{},"sourceType":"module"}