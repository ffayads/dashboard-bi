{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Badge } from 'reactstrap';\nimport PersonalModal from '../../components/Modal/modal';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getData, ActualizaS } from './function';\n\nconst content = props => {\n  const [openModal, setOpenModal] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const {\n    handleSubmit,\n    errors,\n    control,\n    reset\n  } = useForm();\n\n  const Actualiza = async data => ActualizaS(data, setData);\n\n  React.useEffect(() => {\n    if (data.length === 0) {\n      getData({\n        setData,\n        setOpenModal\n      });\n    }\n\n    setOpenModal(false);\n  }, [data]);\n  React.useEffect(() => {\n    if (openModal.id === undefined) {\n      reset();\n    }\n  }, [openModal]);\n\n  const modalAction = () => {\n    let dato = data.filter(elem => elem.ID === openModal.id)[0];\n    if (dato === undefined) return \"\";\n    return __jsx(PersonalModal, {\n      modal: openModal.flag,\n      setModal: setOpenModal,\n      title: dato.Name,\n      size: \"sm\"\n    }, __jsx(Row, null, __jsx(Col, {\n      sm: 12\n    }, __jsx(Label, {\n      style: {\n        color: \"black\"\n      }\n    }, \"Nombre :\"), __jsx(\"span\", null, \" \", dato.Name, \" \")), __jsx(Col, {\n      sm: 12\n    }, __jsx(Label, {\n      style: {\n        color: \"black\"\n      }\n    }, \"Nombre :\"), __jsx(\"span\", null, \" \", dato.Status, \" \")), __jsx(Col, {\n      sm: 12\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit(Actualiza)\n    }, __jsx(Label, {\n      for: \"valor\",\n      style: {\n        color: \"black\"\n      }\n    }, \"Valor :\"), errors.valor && __jsx(Badge, {\n      color: \"warning\",\n      pill: true\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: dato.ID\n    }), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"number\",\n      name: \"valor\",\n      placeholder: \"valor\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: dato.Value\n    }), __jsx(\"center\", null, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      color: \"danger\",\n      size: \"lg\"\n    }, \"Actualizar\"))))));\n  };\n\n  const columns = [{\n    Header: 'Secuencial',\n    accessor: 'ID'\n  }, {\n    Header: 'Nombre',\n    accessor: 'Name'\n  }, {\n    Header: 'Estado',\n    accessor: 'Status'\n  }, {\n    Header: \"Valor\",\n    accessor: 'Value'\n  }, {\n    Header: \"Acciones\",\n    accessor: \"actions\",\n    sortable: false,\n    filterable: false\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    md: 12\n  }, __jsx(Card, null, __jsx(CardHeader, null, __jsx(CardTitle, {\n    tag: \"h3\"\n  }, \"Tipos de reporte \")), __jsx(CardBody, null, __jsx(ReactTable, {\n    data: data,\n    columns: columns,\n    filterable: true,\n    resizable: false,\n    defaultPageSize: 10,\n    showPaginationBottom: true,\n    className: \"-striped -highlight\"\n  })))))), modalAction());\n};\n\nexport default content;","map":null,"metadata":{},"sourceType":"module"}