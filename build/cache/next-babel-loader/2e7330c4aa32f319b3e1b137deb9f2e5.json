{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport swal from 'sweetalert';\nimport { ContextOne } from '../context/global';\nconst cookies = new Cookies();\nexport const Login = (data, dispatch) => {\n  axios.post(\"/loginAdmin\", {\n    \"email\": data.email,\n    \"password\": data.password,\n    \"role\": \"1\"\n  }).then(response => {\n    if (response !== undefined && response.status === 200) {\n      let token = 'Bearer '.concat(response.data.token);\n      cookies.set(\"Token\", token);\n      dispatch({\n        type: \"stop-load\"\n      });\n    } else {\n      swal(\"Alerta!\", \"Usuario/contraseña incorrectos\", \"warning\");\n    }\n  });\n};\nexport const refreshToken = (data, dispatch) => {\n  axios.get(\"/auth/refresh_token\", {}).then(response => {\n    if (response.status === 200) {\n      let token = 'Bearer '.concat(data.token);\n      cookies.set(\"Token\", token);\n      axios.defaults.headers.get['Authorization'] = token;\n      axios.defaults.headers.post['Authorization'] = token;\n    }\n  });\n};\n\nconst info = () => {\n  return \"Utils for query get type \";\n};\n\nexport default info;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/Utlis/auth.jsx"],"names":["React","axios","Cookies","swal","ContextOne","cookies","Login","data","dispatch","post","email","password","then","response","undefined","status","token","concat","set","type","refreshToken","get","defaults","headers","info"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;AAEA,OAAO,MAAMI,KAAK,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACrCP,EAAAA,KAAK,CAACQ,IAAN,CAAW,aAAX,EAA0B;AACtB,aAASF,IAAI,CAACG,KADQ;AAEtB,gBAAYH,IAAI,CAACI,QAFK;AAGtB,YAAQ;AAHc,GAA1B,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,QAAIA,QAAQ,KAAKC,SAAb,IAA0BD,QAAQ,CAACE,MAAT,KAAoB,GAAlD,EAAuD;AACnD,UAAIC,KAAK,GAAG,UAAUC,MAAV,CAAiBJ,QAAQ,CAACN,IAAT,CAAcS,KAA/B,CAAZ;AACAX,MAAAA,OAAO,CAACa,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAJD,MAIO;AACHhB,MAAAA,IAAI,CAAC,SAAD,EAAY,gCAAZ,EAA8C,SAA9C,CAAJ;AACH;AACJ,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMiB,YAAY,GAAG,CAACb,IAAD,EAAOC,QAAP,KAAoB;AAC5CP,EAAAA,KAAK,CAACoB,GAAN,CAAU,qBAAV,EAAiC,EAAjC,EACGT,IADH,CACSC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,UAAIC,KAAK,GAAG,UAAUC,MAAV,CAAiBV,IAAI,CAACS,KAAtB,CAAZ;AACAX,MAAAA,OAAO,CAACa,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAf,MAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBF,GAAvB,CAA2B,eAA3B,IAA8CL,KAA9C;AACAf,MAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBd,IAAvB,CAA4B,eAA5B,IAA+CO,KAA/C;AACH;AACJ,GARD;AASH,CAVM;;AAYP,MAAMQ,IAAI,GAAG,MAAM;AACf,SAAO,2BAAP;AACH,CAFD;;AAGA,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport swal from 'sweetalert';\nimport { ContextOne } from '../context/global';\nconst cookies = new Cookies();\n\nexport const Login = (data, dispatch) => {\n    axios.post(\"/loginAdmin\", {\n        \"email\": data.email,\n        \"password\": data.password,\n        \"role\": \"1\",\n    }).then((response) => {\n        if (response !== undefined && response.status === 200) {\n            let token = 'Bearer '.concat(response.data.token);\n            cookies.set(\"Token\", token);\n            dispatch({ type: \"stop-load\" });\n        } else {\n            swal(\"Alerta!\", \"Usuario/contraseña incorrectos\", \"warning\")\n        }\n    })\n}\n\nexport const refreshToken = (data, dispatch) => {\n    axios.get(\"/auth/refresh_token\", {\n    }).then((response) => {\n        if (response.status === 200) {\n            let token = 'Bearer '.concat(data.token);\n            cookies.set(\"Token\", token);\n            axios.defaults.headers.get['Authorization'] = token;\n            axios.defaults.headers.post['Authorization'] = token;\n        }\n    })\n}\n\nconst info = () => {\n    return \"Utils for query get type \";\n}\nexport default info;"]},"metadata":{},"sourceType":"module"}