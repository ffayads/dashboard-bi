{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nlet chart_1_2_3_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.0)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: \"#9a9a9a\"\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.1)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#9a9a9a\"\n      }\n    }]\n  }\n}; // #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\n\nexport let chartExample1 = {\n  data1: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    console.log(\"Prueba\");\n    let dataX = getData(1);\n    console.log(dataX, \"xxx\");\n    getData(1);\n    return {\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"],\n      datasets: [{\n        label: \"Visitas en el día\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        //data: dataX\n        data: [\"0\", \"1263\", \"1221\", \"1344\", \"1247\", \"1227\", \"1273\", \"1232\", \"1299\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"]\n      }]\n    };\n  },\n  data2: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    getData(2);\n    return {\n      labels: [\"ENE\", \"FEB\", \"MAR\", \"ABR\", \"MAY\", \"JUN\", \"JUL\", \"AGO\", \"SEP\", \"OCT\", \"NOV\", \"DIC\"],\n      datasets: [{\n        label: \"Visitas en el mes\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [0, 0, 0, 0, 10106, 0, 0, 0, 0, 0, 0, 0]\n      }]\n    };\n  },\n  options: chart_1_2_3_options\n};\nexport const getData = async props => {\n  if (props == 1) {\n    axios.post(\"/auth/Kpi/GetSearchs\").then(response => {\n      if (response.status) {\n        let count = [];\n        console.log(response.data);\n        response.data.data.Search.map(e => {\n          count.push(e.count);\n        });\n        console.log(count);\n        return count;\n      } else {\n        return [];\n      }\n    });\n  } else if (props == 2) {\n    axios.post(\"/auth/Kpi/GetSearchsYearly\").then(response => {\n      if (response.status) {\n        let count = [];\n        console.log(response.data);\n        response.data.data.Search.map(e => {\n          count.push(e.count);\n        });\n        console.log(count);\n        return count;\n      } else {\n        return [];\n      }\n    });\n  }\n};\nexport let chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    getData2();\n    return {\n      labels: [\"02-05-2020\", \"03-05-2020\", \"04-05-2020\", \"05-05-2020\", \"06-05-2020\", \"07-05-2020\", \"08-05-2020\", \"09-05-2020\"],\n      datasets: [{\n        label: \"Tiempo promedio de atencion diaria\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        hoverBackgroundColor: gradientStroke,\n        borderColor: \"#d048b6\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        data: [89, 90, 91, 91, 89, 89, 89, 90]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [{\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 120,\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }]\n    }\n  }\n};\nexport const getData2 = async props => {\n  axios.post(\"/auth/Kpi/GetAtention\").then(response => {\n    if (response.status) {\n      let average = [];\n      console.log(response.data);\n      response.data.data.atention.map(e => {\n        average.push(e.average);\n      });\n      console.log(average);\n      return average;\n    } else {\n      return [];\n    }\n  });\n};\nexport let chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    getData3();\n    return {\n      labels: [\"AFGANISTÁN\", \"ALEMANIA\", \"ARGENTINA\", \"BOLIVIA\", \"BRASIL\", \"CAMBOYA\", \"CANADÁ\", \"CHILE\", \"CHINA\", \"COLOMBIANO(A)\", \"COREA\", \"COSTA RICA\", \"CUBA\", \"ECUADOR\", \"ESPAÑA\", \"ESTADOS UNIDOS\", \"FRANCIA\", \"HOLANDA\", \"INDONESIA\", \"ISRAEL\", \"ITALIA\", \"JORDANIA\", \"LAOS\", \"MÉXICO\", \"PANAMÁ\", \"PERÚ\", \"POLONIA\", \"RUSIA\", \"SUECIA\", \"VENEZUELA\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#00d6b4\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#00d6b4\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#00d6b4\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [3, 2, 4, 1, 1, 15, 3, 1, 3, 4915, 1, 1, 3, 2, 5, 6, 3, 3, 1, 2, 5, 1, 3, 1, 1, 1, 1, 1, 2, 5]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [{\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 50,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }],\n      xAxes: [{\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(0,242,195,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }]\n    }\n  }\n};\nexport const getData3 = async props => {\n  axios.post(\"/auth/Kpi/GetAffiliationByNationality\").then(response => {\n    if (response.status) {\n      let average = [];\n      console.log(response.data);\n      response.data.data.affiliation.map(e => {\n        average.push(e.average);\n      });\n      console.log(average);\n      return average;\n    } else {\n      return [];\n    }\n  });\n};\n\nconst Data = () => {\n  return \"Data\";\n};\n\nexport default Data;","map":{"version":3,"sources":["/var/www/html/UT/Dashboard-BI/pages/dashboard/function.jsx"],"names":["React","axios","chart_1_2_3_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data1","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","console","log","dataX","getData","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","options","props","post","then","response","status","count","Search","map","e","push","chartExample3","getData2","hoverBackgroundColor","average","atention","chartExample4","getData3","affiliation","Data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nlet chart_1_2_3_options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }\n      ]\n    }\n  };\n  \n  // #########################################\n  // // // used inside src/views/Dashboard.jsx\n  // #########################################\n  export let chartExample1 = {\n    data1: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n      console.log(\"Prueba\");\n      let dataX = getData(1);\n      console.log(dataX,\"xxx\");\n      getData(1);\n      return {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",],\n        datasets: [\n          {\n            label: \"Visitas en el día\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            //data: dataX\n            data: [\"0\", \"1263\", \"1221\", \"1344\", \"1247\", \"1227\", \"1273\", \"1232\", \"1299\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"]\n          }\n        ]\n      };\n    },\n    data2: canvas => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n      gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n      getData(2);\n      return {\n        labels: [\n          \"ENE\",\n          \"FEB\",\n          \"MAR\",\n          \"ABR\",\n          \"MAY\",\n          \"JUN\",\n          \"JUL\",\n          \"AGO\",\n          \"SEP\",\n          \"OCT\",\n          \"NOV\",\n          \"DIC\"\n        ],\n        datasets: [\n          {\n            label: \"Visitas en el mes\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#1f8ef1\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#1f8ef1\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [0, 0, 0, 0, 10106, 0, 0, 0, 0, 0, 0, 0]\n          }\n        ]\n      };\n    },\n    options: chart_1_2_3_options\n  };\n\nexport const getData = async (props) => {\n  if (props == 1){\n    axios.post(\"/auth/Kpi/GetSearchs\", ).then((response) => {\n        if (response.status) {\n            let count = [];\n                console.log(response.data);\n                response.data.data.Search.map((e) => {\n                     count.push(e.count);\n                })\n                console.log(count);\n                return count;\n        } else {\n            return [];\n        }\n    })\n  } else if (props == 2){\n    axios.post(\"/auth/Kpi/GetSearchsYearly\", ).then((response) => {\n        if (response.status) {\n            let count = [];\n                console.log(response.data);\n                response.data.data.Search.map((e) => {\n                     count.push(e.count);\n                })\n                console.log(count);\n                return count;\n        } else {\n            return [];\n        }\n    })\n  }\n}\n\nexport let chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    getData2();\n    return {\n      labels: [\"02-05-2020\", \"03-05-2020\", \"04-05-2020\", \"05-05-2020\", \"06-05-2020\", \"07-05-2020\", \"08-05-2020\", \"09-05-2020\"],\n      datasets: [\n        {\n          label: \"Tiempo promedio de atencion diaria\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [89, 90, 91, 91, 89, 89, 89, 90]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nexport const getData2 = async (props) => {\n  axios.post(\"/auth/Kpi/GetAtention\", ).then((response) => {\n      if (response.status) {\n          let average = [];\n              console.log(response.data);\n              response.data.data.atention.map((e) => {\n                average.push(e.average);\n              })\n              console.log(average);\n              return average;\n      } else {\n          return [];\n      }\n  })\n}\n\nexport let chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n    getData3();\n    return {\n      labels: [\"AFGANISTÁN\",\"ALEMANIA\",\"ARGENTINA\",\"BOLIVIA\",\"BRASIL\",\"CAMBOYA\",\"CANADÁ\",\"CHILE\",\"CHINA\",\"COLOMBIANO(A)\",\"COREA\",\"COSTA RICA\",\"CUBA\",\"ECUADOR\",\"ESPAÑA\",\"ESTADOS UNIDOS\",\"FRANCIA\",\"HOLANDA\",\"INDONESIA\",\"ISRAEL\",\"ITALIA\",\"JORDANIA\",\"LAOS\",\"MÉXICO\",\"PANAMÁ\",\"PERÚ\",\"POLONIA\",\"RUSIA\",\"SUECIA\",\"VENEZUELA\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [3,2,4,1,1,15,3,1,3,4915,1,1,3,2,5,6,3,3,1,2,5,1,3,1,1,1,1,1,2,5]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nexport const getData3 = async (props) => {\n  axios.post(\"/auth/Kpi/GetAffiliationByNationality\", ).then((response) => {\n      if (response.status) {\n          let average = [];\n              console.log(response.data);\n              response.data.data.affiliation.map((e) => {\n                average.push(e.average);\n              })\n              console.log(average);\n              return average;\n      } else {\n          return [];\n      }\n  })\n}\n\nconst Data = () =>{\n    return(\n        \"Data\"\n    )\n}\n\nexport default Data;\n\n"]},"metadata":{},"sourceType":"module"}