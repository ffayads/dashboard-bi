{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nexport let ContextOne = React.createContext();\nexport let initialState = {\n  load: true\n};\nexport let reducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n\n    case \"stop-load\":\n      return _objectSpread({}, state, {\n        load: false\n      });\n\n    case \"start-load\":\n      return _objectSpread({}, state, {\n        load: true\n      });\n  }\n};\nexport function ContextOneProvider(props) {\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n  let value = {\n    state,\n    dispatch\n  };\n  return __jsx(ContextOne.Provider, {\n    value: value\n  }, props.children);\n}\nexport let ContextOneConsumer = ContextOne.Consumer;\n\nconst Info = () => {\n  return \"this file found to controller general state\";\n};\n\nexport default Info;","map":null,"metadata":{},"sourceType":"module"}