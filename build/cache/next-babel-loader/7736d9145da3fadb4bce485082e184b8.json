{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/pages/consulta/content.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Table, Input, FormGroup } from 'reactstrap';\nimport { getReports } from '../../Utlis/get';\nimport Modal from '../../components/Modal/modal';\nimport Select from \"react-select\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nvar content = function content() {\n  var _React$useState = React.useState({\n    data: [],\n    loading: false,\n    filter: \"\",\n    valfilter: \"\",\n    typeValFilter: \"text\",\n    query: []\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modal = _React$useState4[0],\n      setModal = _React$useState4[1];\n\n  React.useEffect(function () {\n    return function () {\n      setState(_objectSpread({}, state, {\n        data: []\n      }));\n    };\n  }, []);\n  var status = {\n    0: \"INACTIVO\",\n    1: \"ACTIVO\"\n  };\n  var reportS = {\n    0: \"PENDIENTE\",\n    1: \"APROBADO\",\n    2: \"RECHAZADO\",\n    3: \"FINALIZADO\"\n  };\n  var columns = [{\n    Header: 'Tipo de Evento',\n    accessor: 'TypeReport'\n  }, {\n    Header: 'Estado',\n    accessor: 'Status'\n  }, {\n    Header: 'Usuario Visador',\n    accessor: 'AdminUser'\n  }, {\n    Header: function Header(props) {\n      return __jsx(\"center\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 30\n        }\n      }, \"Fecha de evento\");\n    },\n    accessor: \"Date\"\n  }];\n  var optionFilter = [{\n    value: \"@\",\n    label: \"Seleccione\",\n    isDisabled: true\n  }, {\n    value: \"id\",\n    label: \"Numero de registro\",\n    type: \"number\"\n  }, {\n    value: \"type_reports_id\",\n    label: \"Tipo de evento\",\n    type: \"number\"\n  }, {\n    value: \"users_id\",\n    label: \"Usuario\",\n    type: \"number\"\n  }, {\n    value: \"status\",\n    label: \"Estado\",\n    type: \"number\"\n  }, {\n    value: \"admin_users_id\",\n    label: \"Funcionario\",\n    type: \"number\"\n  }, {\n    value: \"date_from\",\n    label: \"Fecha inicial\",\n    type: \"date\"\n  }, {\n    value: \"date_to\",\n    label: \"Fecha final\",\n    type: \"date\"\n  }];\n\n  var getdata = function getdata() {\n    setState(_objectSpread({}, state, {\n      loading: true\n    }));\n    var query = {};\n    state.query.map(function (elem) {\n      var obj = Object.entries(elem)[0];\n      var type = optionFilter.filter(function (of) {\n        return of.value === obj[0];\n      })[0];\n      var val = obj[1];\n      if (type.type === \"number\") val = parseInt(val);\n      if (type.type === \"date\") val = val + \" 00:00:00\";\n      query[obj[0]] = val;\n    });\n    getReports(query).then(function (elem) {\n      if (elem !== undefined && elem.data.reports !== undefined) {\n        var newData = [];\n        elem.data.reports.map(function (e) {\n          e['Date'] = new Date(e.Time).toLocaleDateString();\n          e['Status'] = reportS[e.Status];\n          newData.push(e);\n        });\n        setState(_objectSpread({}, state, {\n          data: newData,\n          loading: false\n        }));\n        setModal(false);\n      } else {\n        setState(_objectSpread({}, state, {\n          data: [],\n          loading: false\n        }));\n        setModal(false);\n      }\n    });\n  };\n\n  var report = function report(type) {\n    if (type === \"E\") {\n      alert(\"reporte en proceso...\");\n    } else {\n      alert(\"reporte en proceso...\");\n    }\n  };\n\n  var query = function query() {\n    var filter = state.filter,\n        valfilter = state.valfilter;\n\n    if (valfilter !== undefined && valfilter !== \"\") {\n      setState(_objectSpread({}, state, {\n        query: [].concat(_toConsumableArray(state.query), [_defineProperty({}, filter.value, valfilter)]),\n        valfilter: \"\",\n        typeValFilter: \"text\",\n        filter: {}\n      }));\n    }\n  };\n\n  var queryDelete = function queryDelete(index) {\n    var arr = state.query;\n    var i = arr.indexOf(index);\n    arr.splice(i, 1);\n    setState(_objectSpread({}, state, {\n      query: arr\n    }));\n  };\n\n  var getFilter = function getFilter() {\n    var trTable = function trTable() {\n      return state.query.map(function (elem, i) {\n        var objet = Object.entries(elem)[0];\n        var label = optionFilter.filter(function (of) {\n          return of.value === objet[0];\n        });\n        return __jsx(\"tr\", {\n          key: \"tr_\" + i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, __jsx(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }\n        }, label[0].label), __jsx(\"td\", {\n          className: \"text-right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, objet[1]), __jsx(\"td\", {\n          className: \"text-right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }, __jsx(Button, {\n          className: \"btn-round\",\n          color: \"danger\",\n          size: \"sm\",\n          onClick: function onClick() {\n            queryDelete(i);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }\n        }, __jsx(\"i\", {\n          className: \"tim-icons icon-simple-remove\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }\n        }))));\n      });\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      xs: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, __jsx(Select, {\n      className: \"react-select info\",\n      classNamePrefix: \"react-select\",\n      name: \"fiterSelect\",\n      value: state.filter || \"\",\n      onChange: function onChange(value) {\n        return setState(_objectSpread({}, state, {\n          filter: value,\n          typeValFilter: value.type,\n          valfilter: \"\"\n        }));\n      },\n      options: optionFilter || \"\",\n      placeholder: \"Filtrar por ...\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    })), __jsx(Col, {\n      xs: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      className: \"has-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      className: \"info\",\n      type: state.typeValFilter,\n      placeholder: \"Valor\",\n      value: state.valfilter || \"\",\n      onChange: function onChange(e) {\n        return setState(_objectSpread({}, state, {\n          valfilter: e.target.value\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }))), __jsx(Col, {\n      xs: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      className: \"btn-round\",\n      color: \"info\",\n      size: \"sm\",\n      onClick: function onClick() {\n        query();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, __jsx(\"i\", {\n      className: \"tim-icons icon-simple-add\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }), \" Agregar\")), __jsx(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }), __jsx(Col, {\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, __jsx(Table, {\n      responsive: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, __jsx(\"thead\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, \"Filtro\"), __jsx(\"th\", {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, \"Valor\"), __jsx(\"th\", {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }))), __jsx(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, trTable()))), __jsx(Col, {\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, __jsx(\"center\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      size: \"lg\",\n      onClick: function onClick() {\n        getdata();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, __jsx(\"i\", {\n      className: \"tim-icons icon-send\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }), \" Aplicar\")))));\n  };\n\n  var getTable = function getTable() {\n    return __jsx(Table, {\n      id: \"excel\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, __jsx(\"thead\", {\n      key: \"report_head\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, __jsx(\"tr\", {\n      key: \"header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Tipo de Evento\"), __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, \"Estado\"), __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Usuario visador\"), __jsx(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"Fecha de evento\"))), __jsx(\"tbody\", {\n      key: \"report_body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, state.data.map(function (elem, i) {\n      return __jsx(\"tr\", {\n        key: \"body_tr_\" + i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }\n      }, columns.map(function (header, m) {\n        return __jsx(\"td\", {\n          key: \"body_td_\" + i + m,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 44\n          }\n        }, elem[header.accessor]);\n      }));\n    })));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, __jsx(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 29\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, __jsx(CardTitle, {\n    tag: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }, \"Consulta de sistema\")), __jsx(Col, {\n    xs: 9,\n    className: \"text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, __jsx(ReactHTMLTableToExcel, {\n    table: \"excel\",\n    filename: \"Report\",\n    sheet: \"page\",\n    className: \"btn-round btn btn-success btn-sm\",\n    buttonText: \"Excel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 41\n    }\n  }), __jsx(Button, {\n    className: \"btn-round\",\n    color: \"danger\",\n    size: \"sm\",\n    onClick: function onClick() {\n      report(\"P\");\n    },\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 45\n    }\n  }), \"Pdf\"), __jsx(Button, {\n    className: \"btn-round\",\n    color: \"info\",\n    size: \"sm\",\n    onClick: function onClick() {\n      setModal(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }), \"Filtrar\")))), __jsx(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, __jsx(ReactTable, {\n    columns: columns,\n    data: state.data,\n    loading: state.loading,\n    defaultPageSize: 10,\n    sortable: false,\n    resizable: false,\n    className: \"-striped -highlight\",\n    onFetchData: function onFetchData(state, instance) {\n      return getdata(state);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }))))), __jsx(Modal, {\n    modal: modal,\n    setModal: setModal,\n    title: \"Filtrar\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, getFilter())), __jsx(\"div\", {\n    style: {\n      display: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, getTable()));\n};\n\nexport default content;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/pages/consulta/content.jsx"],"names":["React","ReactTable","Row","Col","Card","CardHeader","CardTitle","CardBody","Button","Table","Input","FormGroup","getReports","Modal","Select","ReactHTMLTableToExcel","content","useState","data","loading","filter","valfilter","typeValFilter","query","state","setState","modal","setModal","useEffect","status","reportS","columns","Header","accessor","props","optionFilter","value","label","isDisabled","type","getdata","map","elem","obj","Object","entries","of","val","parseInt","then","undefined","reports","newData","e","Date","Time","toLocaleDateString","Status","push","report","alert","queryDelete","index","arr","i","indexOf","splice","getFilter","trTable","objet","target","getTable","header","m","instance","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Table, Input, FormGroup } from 'reactstrap';\nimport { getReports } from '../../Utlis/get';\nimport Modal from '../../components/Modal/modal';\nimport Select from \"react-select\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\nconst content = () => {\n    const [state, setState] = React.useState({\n        data: [],\n        loading: false,\n        filter: \"\",\n        valfilter: \"\",\n        typeValFilter: \"text\",\n        query: []\n    });\n    const [modal, setModal] = React.useState(false);\n\n    React.useEffect(() => {\n        return () => {\n            setState({ ...state, data: [] });\n        }\n    }, [])\n\n    const status = {\n        0: \"INACTIVO\",\n        1: \"ACTIVO\"\n    }\n\n    const reportS = {\n        0: \"PENDIENTE\",\n        1: \"APROBADO\",\n        2: \"RECHAZADO\",\n        3: \"FINALIZADO\"\n    }\n\n    const columns = [\n        {\n            Header: 'Tipo de Evento',\n            accessor: 'TypeReport'\n        }, {\n            Header: 'Estado',\n            accessor: 'Status',\n        }, {\n            Header: 'Usuario Visador',\n            accessor: 'AdminUser',\n        }, {\n            Header: props => <center>{\"Fecha de evento\"}</center>,\n            accessor: \"Date\",\n        }\n    ];\n    const optionFilter = [\n        { value: \"@\", label: \"Seleccione\", isDisabled: true },\n        { value: \"id\", label: \"Numero de registro\", type: \"number\" },\n        { value: \"type_reports_id\", label: \"Tipo de evento\", type: \"number\" },\n        { value: \"users_id\", label: \"Usuario\", type: \"number\" },\n        { value: \"status\", label: \"Estado\", type: \"number\" },\n        { value: \"admin_users_id\", label: \"Funcionario\", type: \"number\" },\n        { value: \"date_from\", label: \"Fecha inicial\", type: \"date\" },\n        { value: \"date_to\", label: \"Fecha final\", type: \"date\" },\n    ];\n\n    const getdata = () => {\n        setState({ ...state, loading: true })\n        let query = {};\n        state.query.map(elem => {\n            let obj = Object.entries(elem)[0];\n            let type = optionFilter.filter(of => of.value === obj[0])[0];\n            let val = obj[1];\n            if (type.type === \"number\") val = parseInt(val);\n            if (type.type === \"date\") val = val + \" 00:00:00\";\n            query[obj[0]] = val;\n        })\n        getReports(query).then(elem => {\n            if (elem !== undefined && elem.data.reports !== undefined) {\n                let newData = [];\n                elem.data.reports.map((e) => {\n                    e['Date'] = new Date(e.Time).toLocaleDateString();\n                    e['Status'] = reportS[e.Status];\n                    newData.push(e)\n                })\n                setState({ ...state, data: newData, loading: false })\n                setModal(false);\n            } else {\n                setState({ ...state, data: [], loading: false })\n                setModal(false);\n            }\n        })\n    };\n\n    const report = (type) => {\n        if (type === \"E\") {\n            alert(\"reporte en proceso...\");\n        } else {\n            alert(\"reporte en proceso...\");\n        }\n    }\n\n    const query = () => {\n        let { filter, valfilter } = state;\n        if (valfilter !== undefined && valfilter !== \"\") {\n            setState({\n                ...state,\n                query: [\n                    ...state.query,\n                    { [filter.value]: valfilter }\n                ],\n                valfilter: \"\",\n                typeValFilter: \"text\",\n                filter: {}\n            })\n        }\n    }\n\n    const queryDelete = (index) => {\n        let arr = state.query\n        let i = arr.indexOf(index);\n        arr.splice(i, 1);\n        setState({\n            ...state,\n            query: arr\n        })\n    }\n\n    const getFilter = () => {\n        let trTable = () => {\n            return state.query.map((elem, i) => {\n                let objet = Object.entries(elem)[0];\n                let label = optionFilter.filter(of => of.value === objet[0]);\n                return (\n                    <tr key={\"tr_\" + i}>\n                        <td>{label[0].label}</td>\n                        <td className=\"text-right\">{objet[1]}</td>\n                        <td className=\"text-right\">\n                            <Button className=\"btn-round\" color=\"danger\" size=\"sm\" onClick={() => { queryDelete(i) }}>\n                                <i className=\"tim-icons icon-simple-remove\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                )\n            })\n        }\n        return (\n            <>\n                <Row>\n                    <Col xs={5}>\n                        <Select\n                            className=\"react-select info\"\n                            classNamePrefix=\"react-select\"\n                            name=\"fiterSelect\"\n                            value={state.filter || \"\"}\n                            onChange={value =>\n                                setState({ ...state, filter: value, typeValFilter: value.type, valfilter: \"\" })\n                            }\n                            options={optionFilter || \"\"}\n                            placeholder=\"Filtrar por ...\"\n                        />\n                    </Col>\n                    <Col xs={3}>\n                        <FormGroup className=\"has-info\">\n                            <Input\n                                className={\"info\"}\n                                type={state.typeValFilter}\n                                placeholder=\"Valor\"\n                                value={state.valfilter || \"\"}\n                                onChange={(e) => setState({ ...state, valfilter: e.target.value })}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={3}>\n                        <Button className=\"btn-round\" color=\"info\" size=\"sm\" onClick={() => { query() }}>\n                            <i className=\"tim-icons icon-simple-add\"></i>{\" Agregar\"}\n                        </Button>\n                    </Col>\n                    <hr />\n                    <Col xs={12}>\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Filtro</th>\n                                    <th className=\"text-right\">Valor</th>\n                                    <th className=\"text-right\"></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {trTable()}\n                            </tbody>\n                        </Table>\n                    </Col>\n                    <Col xs={12}>\n                        <center>\n                            <Button className=\"btn-round\" color=\"success\" size=\"lg\" onClick={() => { getdata() }}>\n                                <i className=\"tim-icons icon-send\"></i>{\" Aplicar\"}\n                            </Button>\n                        </center>\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n\n    const getTable = () => {\n        return (\n            <Table id=\"excel\">\n                <thead key={\"report_head\"}>\n                    <tr key={\"header\"}>\n                        <th>{\"Tipo de Evento\"}</th>\n                        <th>{\"Estado\"}</th>\n                        <th>{\"Usuario visador\"}</th>\n                        <th>{\"Fecha de evento\"}</th>\n                    </tr>\n                </thead>\n                <tbody key={\"report_body\"}>\n                    {state.data.map((elem, i) => {\n                        return (\n                            <tr key={\"body_tr_\" + i}>\n                                {columns.map((header, m) => {\n                                    return <td key={\"body_td_\" + i + m}>{elem[header.accessor]}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table >\n        )\n    }\n\n    return (\n        <>\n            <div className=\"content\">\n                <Row>\n                    <Col xs={12} md={12}>\n                        <Card>\n                            <CardHeader>\n                                <Row>\n                                    <Col xs={3}>\n                                        <CardTitle tag=\"h3\">{\"Consulta de sistema\"}</CardTitle>\n                                    </Col>\n                                    <Col xs={9} className=\"text-right\">\n                                        <ReactHTMLTableToExcel\n                                            table=\"excel\"\n                                            filename=\"Report\"\n                                            sheet=\"page\"\n                                            className=\"btn-round btn btn-success btn-sm\"\n                                            buttonText=\"Excel\"\n                                        />\n                                        <Button className=\"btn-round\" color=\"danger\" size=\"sm\" onClick={() => { report(\"P\") }} disabled>\n                                            <i className=\"fa fa-user\"></i>{\"Pdf\"}\n                                        </Button>\n                                        <Button className=\"btn-round\" color=\"info\" size=\"sm\" onClick={() => { setModal(true) }}>\n                                            <i className=\"fa fa-user\"></i>{\"Filtrar\"}\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <ReactTable\n                                    columns={columns}\n                                    data={state.data}\n                                    loading={state.loading}\n                                    defaultPageSize={10}\n                                    sortable={false}\n                                    resizable={false}\n                                    className=\"-striped -highlight\"\n                                    onFetchData={(state, instance) => getdata(state)}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Modal modal={modal} setModal={setModal} title={\"Filtrar\"} size={\"lg\"}>\n                    {getFilter()}\n                </Modal>\n            </div>\n            <div style={{ display: \"none\" }}>\n                {getTable()}\n            </div>\n        </>\n    )\n}\n\nexport default content;"]},"metadata":{},"sourceType":"module"}