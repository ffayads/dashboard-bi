{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\n\nvar Actions = function Actions(props) {\n  return __jsx(\"div\", {\n    className: \"actions-right\"\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      props.setOpenModal({\n        flag: true,\n        id: props.data\n      });\n    },\n    color: \"info\",\n    size: \"sm\",\n    className: \"btn-icon btn-round\"\n  }, __jsx(\"i\", {\n    className: \"tim-icons icon-alert-circle-exc\"\n  })));\n};\n\nexport var getData = function getData(props) {\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          axios.get(\"authAdmin/typeReports/GetTypeReports\", {\n            id: \"\"\n          }).then(function (response) {\n            if (response.status) {\n              var data = [];\n              response.data.data.typeReports.map(function (elem) {\n                elem['Status'] = elem.Status === true ? \"ACTIVO\" : \"INACTIVO\";\n                elem['actions'] = Actions({\n                  setOpenModal: props.setOpenModal,\n                  data: elem.ID\n                });\n                data.push(elem);\n              });\n              props.setData(data);\n            } else {\n              swal(response.msg, \"\", \"warning\");\n            }\n          })[\"catch\"](function (error) {\n            swal(\"Algo inesperado paso!\", \"Intenta mas tarde\", \"warning\");\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var ActualizaS = function ActualizaS(data, setData) {\n  return _regeneratorRuntime.async(function ActualizaS$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          swal({\n            title: \"Esta seguro?\",\n            text: \"Esta por actualizar el valor\",\n            icon: \"warning\",\n            buttons: [\"Cancelar!\", \"Si, Actualizar!\"]\n          }).then(function (flag) {\n            if (flag === true) {\n              axios.post(\"authAdmin/typeReports/UpdateTypeReports\", {\n                id: data.id,\n                value: parseInt(data.valor)\n              }).then(function (response) {\n                swal(\"Exito!\", \"Se guardo / actualizo con exito\", \"success\");\n                setData([]);\n              })[\"catch\"](function (error) {\n                swal(\"Algo inesperado paso!\", \"Intenta mas tarde\", \"warning\");\n              });\n            }\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Data = function Data() {\n  return \"Data\";\n};\n\nexport default Data;","map":null,"metadata":{},"sourceType":"module"}