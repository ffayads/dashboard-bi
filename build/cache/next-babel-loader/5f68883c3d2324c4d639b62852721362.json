{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/pages/consulta/content.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Select from \"react-select\";\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Table, Input, FormGroup } from 'reactstrap';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport { reportS } from '../../variables/varGeneral';\nimport { getReports } from '../../Utlis/get';\nimport Modal from '../../components/Modal/modal';\n\nconst content = () => {\n  const [state, setState] = React.useState({\n    data: [],\n    loading: false,\n    filter: \"\",\n    valfilter: \"\",\n    typeValFilter: \"text\",\n    query: []\n  });\n  const [modal, setModal] = React.useState(false);\n  React.useEffect(() => {\n    return () => {\n      setState(_objectSpread({}, state, {\n        data: []\n      }));\n    };\n  }, []);\n  const columns = [{\n    Header: 'Tipo de Evento',\n    accessor: 'TypeReport'\n  }, {\n    Header: 'Estado',\n    accessor: 'Status'\n  }, {\n    Header: 'Usuario Visador',\n    accessor: 'AdminUser'\n  }, {\n    Header: props => __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 30\n      }\n    }, \"Fecha de evento\"),\n    accessor: \"Date\"\n  }];\n  const optionFilter = [{\n    value: \"@\",\n    label: \"Seleccione\",\n    isDisabled: true\n  }, {\n    value: \"id\",\n    label: \"Numero de registro\",\n    type: \"number\"\n  }, {\n    value: \"type_reports_id\",\n    label: \"Tipo de evento\",\n    type: \"number\"\n  }, {\n    value: \"users_id\",\n    label: \"Usuario\",\n    type: \"number\"\n  }, {\n    value: \"status\",\n    label: \"Estado\",\n    type: \"number\"\n  }, {\n    value: \"admin_users_id\",\n    label: \"Funcionario\",\n    type: \"number\"\n  }, {\n    value: \"date_from\",\n    label: \"Fecha inicial\",\n    type: \"date\"\n  }, {\n    value: \"date_to\",\n    label: \"Fecha final\",\n    type: \"date\"\n  }];\n\n  const getdata = () => {\n    setState(_objectSpread({}, state, {\n      loading: true\n    }));\n    let query = {};\n    state.query.map(elem => {\n      let obj = Object.entries(elem)[0];\n      let type = optionFilter.filter(of => of.value === obj[0])[0];\n      let val = obj[1];\n      if (type.type === \"number\") val = parseInt(val);\n      if (type.type === \"date\") val = val + \" 00:00:00\";\n      query[obj[0]] = val;\n    });\n    getReports(query).then(elem => {\n      if (elem !== undefined && elem.data.reports !== undefined) {\n        let newData = [];\n        elem.data.reports.map(e => {\n          e['Date'] = new Date(e.Time).toLocaleDateString();\n          e['Status'] = reportS[e.Status];\n          newData.push(e);\n        });\n        setState(_objectSpread({}, state, {\n          data: newData,\n          loading: false\n        }));\n        setModal(false);\n      } else {\n        setState(_objectSpread({}, state, {\n          data: [],\n          loading: false\n        }));\n        setModal(false);\n      }\n    });\n  };\n\n  const query = () => {\n    let {\n      filter,\n      valfilter\n    } = state;\n\n    if (valfilter !== undefined && valfilter !== \"\") {\n      setState(_objectSpread({}, state, {\n        query: [...state.query, {\n          [filter.value]: valfilter\n        }],\n        valfilter: \"\",\n        typeValFilter: \"text\",\n        filter: \"\"\n      }));\n    }\n  };\n\n  const queryDelete = index => {\n    let arr = state.query;\n    let i = arr.indexOf(index);\n    arr.splice(i, 1);\n    setState(_objectSpread({}, state, {\n      query: arr\n    }));\n  };\n\n  const getFilter = () => {\n    let trTable = () => {\n      return state.query.map((elem, i) => {\n        let objet = Object.entries(elem)[0];\n        let label = optionFilter.filter(of => of.value === objet[0]);\n        return __jsx(\"tr\", {\n          key: \"tr_\" + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, __jsx(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }\n        }, label[0].label), __jsx(\"td\", {\n          className: \"text-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }\n        }, objet[1]), __jsx(\"td\", {\n          className: \"text-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }\n        }, __jsx(Button, {\n          className: \"btn-round\",\n          color: \"danger\",\n          size: \"sm\",\n          onClick: () => {\n            queryDelete(i);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }\n        }, __jsx(\"i\", {\n          className: \"tim-icons icon-simple-remove\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }\n        }))));\n      });\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, __jsx(Select, {\n      className: \"react-select info\",\n      classNamePrefix: \"react-select\",\n      name: \"fiterSelect\",\n      value: state.filter || \"\",\n      onChange: value => setState(_objectSpread({}, state, {\n        filter: value,\n        typeValFilter: value.type,\n        valfilter: \"\"\n      })),\n      options: optionFilter || \"\",\n      placeholder: \"Filtrar por ...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    })), __jsx(Col, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      className: \"has-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      className: \"info\",\n      type: state.typeValFilter || \"text\",\n      placeholder: \"Valor\",\n      value: state.valfilter || \"\",\n      onChange: e => setState(_objectSpread({}, state, {\n        valfilter: e.target.value\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }))), __jsx(Col, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      className: \"btn-round\",\n      color: \"info\",\n      size: \"sm\",\n      onClick: () => {\n        query();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, __jsx(\"i\", {\n      className: \"tim-icons icon-simple-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }), \" Agregar\")), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), __jsx(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, __jsx(Table, {\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, \"Filtro\"), __jsx(\"th\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, \"Valor\"), __jsx(\"th\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, trTable()))), __jsx(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      size: \"lg\",\n      onClick: () => {\n        getdata();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, __jsx(\"i\", {\n      className: \"tim-icons icon-send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }), \" Aplicar\")))));\n  };\n\n  const getTable = () => {\n    return __jsx(Table, {\n      id: \"excel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, __jsx(\"thead\", {\n      key: \"report_head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, __jsx(\"tr\", {\n      key: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Tipo de Evento\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, \"Estado\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"Usuario visador\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, \"Fecha de evento\"))), __jsx(\"tbody\", {\n      key: \"report_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, state.data.map((elem, i) => {\n      return __jsx(\"tr\", {\n        key: \"body_tr_\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, columns.map((header, m) => {\n        return __jsx(\"td\", {\n          key: \"body_td_\" + i + m,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 44\n          }\n        }, elem[header.accessor]);\n      }));\n    })));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, __jsx(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  }, __jsx(CardTitle, {\n    tag: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 41\n    }\n  }, \"Consulta de sistema\")), __jsx(Col, {\n    xs: 9,\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, __jsx(ReactHTMLTableToExcel, {\n    table: \"excel\",\n    filename: \"Report\",\n    sheet: \"page\",\n    className: \"btn-round btn btn-success btn-sm\",\n    buttonText: \"Excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }), __jsx(Button, {\n    className: \"btn-round\",\n    color: \"danger\",\n    size: \"sm\",\n    onClick: () => console.log(\"pdf\"),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 45\n    }\n  }), \"Pdf\"), __jsx(Button, {\n    className: \"btn-round\",\n    color: \"info\",\n    size: \"sm\",\n    onClick: () => {\n      setModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 45\n    }\n  }), \"Filtrar\")))), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, __jsx(ReactTable, {\n    columns: columns,\n    data: state.data,\n    loading: state.loading,\n    defaultPageSize: 10,\n    sortable: false,\n    resizable: false,\n    className: \"-striped -highlight\",\n    onFetchData: (state, instance) => getdata(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }))))), __jsx(Modal, {\n    modal: modal,\n    setModal: setModal,\n    title: \"Filtrar\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, getFilter())), __jsx(\"div\", {\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, getTable()));\n};\n\nexport default content;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/pages/consulta/content.jsx"],"names":["React","Select","ReactTable","Row","Col","Card","CardHeader","CardTitle","CardBody","Button","Table","Input","FormGroup","ReactHTMLTableToExcel","reportS","getReports","Modal","content","state","setState","useState","data","loading","filter","valfilter","typeValFilter","query","modal","setModal","useEffect","columns","Header","accessor","props","optionFilter","value","label","isDisabled","type","getdata","map","elem","obj","Object","entries","of","val","parseInt","then","undefined","reports","newData","e","Date","Time","toLocaleDateString","Status","push","queryDelete","index","arr","i","indexOf","splice","getFilter","trTable","objet","target","getTable","header","m","console","log","instance","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from \"react-select\";\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Table, Input, FormGroup } from 'reactstrap';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport { reportS } from '../../variables/varGeneral';\nimport { getReports } from '../../Utlis/get';\nimport Modal from '../../components/Modal/modal';\n\nconst content = () => {\n    const [state, setState] = React.useState({\n        data: [],\n        loading: false,\n        filter: \"\",\n        valfilter: \"\",\n        typeValFilter: \"text\",\n        query: []\n    });\n    const [modal, setModal] = React.useState(false);\n\n    React.useEffect(() => {\n        return () => {\n            setState({ ...state, data: [] });\n        }\n    }, [])\n\n    const columns = [\n        {\n            Header: 'Tipo de Evento',\n            accessor: 'TypeReport'\n        }, {\n            Header: 'Estado',\n            accessor: 'Status',\n        }, {\n            Header: 'Usuario Visador',\n            accessor: 'AdminUser',\n        }, {\n            Header: props => <center>{\"Fecha de evento\"}</center>,\n            accessor: \"Date\",\n        }\n    ];\n\n    const optionFilter = [\n        { value: \"@\", label: \"Seleccione\", isDisabled: true },\n        { value: \"id\", label: \"Numero de registro\", type: \"number\" },\n        { value: \"type_reports_id\", label: \"Tipo de evento\", type: \"number\" },\n        { value: \"users_id\", label: \"Usuario\", type: \"number\" },\n        { value: \"status\", label: \"Estado\", type: \"number\" },\n        { value: \"admin_users_id\", label: \"Funcionario\", type: \"number\" },\n        { value: \"date_from\", label: \"Fecha inicial\", type: \"date\" },\n        { value: \"date_to\", label: \"Fecha final\", type: \"date\" },\n    ];\n\n    const getdata = () => {\n        setState({ ...state, loading: true })\n        let query = {};\n        state.query.map(elem => {\n            let obj = Object.entries(elem)[0];\n            let type = optionFilter.filter(of => of.value === obj[0])[0];\n            let val = obj[1];\n            if (type.type === \"number\") val = parseInt(val);\n            if (type.type === \"date\") val = val + \" 00:00:00\";\n            query[obj[0]] = val;\n        })\n        getReports(query).then(elem => {\n            if (elem !== undefined && elem.data.reports !== undefined) {\n                let newData = [];\n                elem.data.reports.map((e) => {\n                    e['Date'] = new Date(e.Time).toLocaleDateString();\n                    e['Status'] = reportS[e.Status];\n                    newData.push(e)\n                })\n                setState({ ...state, data: newData, loading: false })\n                setModal(false);\n            } else {\n                setState({ ...state, data: [], loading: false })\n                setModal(false);\n            }\n        })\n    };\n\n    const query = () => {\n        let { filter, valfilter } = state;\n        if (valfilter !== undefined && valfilter !== \"\") {\n            setState({\n                ...state,\n                query: [\n                    ...state.query,\n                    { [filter.value]: valfilter }\n                ],\n                valfilter: \"\",\n                typeValFilter: \"text\",\n                filter: \"\"\n            })\n        }\n    }\n\n    const queryDelete = (index) => {\n        let arr = state.query\n        let i = arr.indexOf(index);\n        arr.splice(i, 1);\n        setState({\n            ...state,\n            query: arr\n        })\n    }\n\n    const getFilter = () => {\n        let trTable = () => {\n            return state.query.map((elem, i) => {\n                let objet = Object.entries(elem)[0];\n                let label = optionFilter.filter(of => of.value === objet[0]);\n                return (\n                    <tr key={\"tr_\" + i}>\n                        <td>{label[0].label}</td>\n                        <td className=\"text-right\">{objet[1]}</td>\n                        <td className=\"text-right\">\n                            <Button className=\"btn-round\" color=\"danger\" size=\"sm\" onClick={() => { queryDelete(i) }}>\n                                <i className=\"tim-icons icon-simple-remove\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                )\n            })\n        }\n        return (\n            <>\n                <Row>\n                    <Col xs={5}>\n                        <Select\n                            className=\"react-select info\"\n                            classNamePrefix=\"react-select\"\n                            name=\"fiterSelect\"\n                            value={state.filter || \"\"}\n                            onChange={value =>\n                                setState({ ...state, filter: value, typeValFilter: value.type, valfilter: \"\" })\n                            }\n                            options={optionFilter || \"\"}\n                            placeholder=\"Filtrar por ...\"\n                        />\n                    </Col>\n                    <Col xs={3}>\n                        <FormGroup className=\"has-info\">\n                            <Input\n                                className={\"info\"}\n                                type={state.typeValFilter || \"text\"}\n                                placeholder=\"Valor\"\n                                value={state.valfilter || \"\"}\n                                onChange={(e) => setState({ ...state, valfilter: e.target.value })}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={3}>\n                        <Button className=\"btn-round\" color=\"info\" size=\"sm\" onClick={() => { query() }}>\n                            <i className=\"tim-icons icon-simple-add\"></i>{\" Agregar\"}\n                        </Button>\n                    </Col>\n                    <hr />\n                    <Col xs={12}>\n                        <Table responsive>\n                            <thead>\n                                <tr>\n                                    <th>Filtro</th>\n                                    <th className=\"text-right\">Valor</th>\n                                    <th className=\"text-right\"></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {trTable()}\n                            </tbody>\n                        </Table>\n                    </Col>\n                    <Col xs={12}>\n                        <center>\n                            <Button className=\"btn-round\" color=\"success\" size=\"lg\" onClick={() => { getdata() }}>\n                                <i className=\"tim-icons icon-send\"></i>{\" Aplicar\"}\n                            </Button>\n                        </center>\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n\n    const getTable = () => {\n        return (\n            <Table id=\"excel\">\n                <thead key={\"report_head\"}>\n                    <tr key={\"header\"}>\n                        <th>{\"Tipo de Evento\"}</th>\n                        <th>{\"Estado\"}</th>\n                        <th>{\"Usuario visador\"}</th>\n                        <th>{\"Fecha de evento\"}</th>\n                    </tr>\n                </thead>\n                <tbody key={\"report_body\"}>\n                    {state.data.map((elem, i) => {\n                        return (\n                            <tr key={\"body_tr_\" + i}>\n                                {columns.map((header, m) => {\n                                    return <td key={\"body_td_\" + i + m}>{elem[header.accessor]}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table >\n        )\n    }\n\n    return (\n        <>\n            <div className=\"content\">\n                <Row>\n                    <Col xs={12} md={12}>\n                        <Card>\n                            <CardHeader>\n                                <Row>\n                                    <Col xs={3}>\n                                        <CardTitle tag=\"h3\">{\"Consulta de sistema\"}</CardTitle>\n                                    </Col>\n                                    <Col xs={9} className=\"text-right\">\n                                        <ReactHTMLTableToExcel\n                                            table=\"excel\"\n                                            filename=\"Report\"\n                                            sheet=\"page\"\n                                            className=\"btn-round btn btn-success btn-sm\"\n                                            buttonText=\"Excel\"\n                                        />\n                                        <Button className=\"btn-round\" color=\"danger\" size=\"sm\" onClick={() => console.log(\"pdf\")} disabled>\n                                            <i className=\"fa fa-user\"></i>{\"Pdf\"}\n                                        </Button>\n                                        <Button className=\"btn-round\" color=\"info\" size=\"sm\" onClick={() => { setModal(true) }}>\n                                            <i className=\"fa fa-user\"></i>{\"Filtrar\"}\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <ReactTable\n                                    columns={columns}\n                                    data={state.data}\n                                    loading={state.loading}\n                                    defaultPageSize={10}\n                                    sortable={false}\n                                    resizable={false}\n                                    className=\"-striped -highlight\"\n                                    onFetchData={(state, instance) => getdata(state)}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Modal modal={modal} setModal={setModal} title={\"Filtrar\"} size={\"lg\"}>\n                    {getFilter()}\n                </Modal>\n            </div>\n            <div style={{ display: \"none\" }}>\n                {getTable()}\n            </div>\n        </>\n    )\n}\n\nexport default content;"]},"metadata":{},"sourceType":"module"}