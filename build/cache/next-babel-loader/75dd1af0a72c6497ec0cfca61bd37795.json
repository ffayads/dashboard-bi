{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/pages/tiposReporte/content.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Badge } from 'reactstrap';\nimport PersonalModal from '../../components/Modal/modal';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getData, ActualizaS } from './function';\n\nvar content = function content(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openModal = _React$useState2[0],\n      setOpenModal = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      control = _useForm.control,\n      reset = _useForm.reset;\n\n  var Actualiza = function Actualiza(data) {\n    return _regeneratorRuntime.async(function Actualiza$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", ActualizaS(data, setData));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    if (data.length === 0) {\n      getData({\n        setData: setData,\n        setOpenModal: setOpenModal\n      });\n    }\n\n    setOpenModal(false);\n  }, [data]);\n  React.useEffect(function () {\n    if (openModal.id === undefined) {\n      reset();\n    }\n  }, [openModal]);\n\n  var modalAction = function modalAction() {\n    var dato = data.filter(function (elem) {\n      return elem.ID === openModal.id;\n    })[0];\n    if (dato === undefined) return \"\";\n    return __jsx(PersonalModal, {\n      modal: openModal.flag,\n      setModal: setOpenModal,\n      title: dato.Name,\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      sm: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, __jsx(Label, {\n      style: {\n        color: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, \"Nombre :\"), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, \" \", dato.Name, \" \")), __jsx(Col, {\n      sm: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, __jsx(Label, {\n      style: {\n        color: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Nombre :\"), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \" \", dato.Status, \" \")), __jsx(Col, {\n      sm: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit(Actualiza),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, __jsx(Label, {\n      \"for\": \"valor\",\n      style: {\n        color: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, \"Valor :\"), errors.valor && __jsx(Badge, {\n      color: \"warning\",\n      pill: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 46\n      }\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: dato.ID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"number\",\n      name: \"valor\",\n      placeholder: \"valor\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: dato.Value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }), __jsx(\"center\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      color: \"danger\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"Actualizar\"))))));\n  };\n\n  var columns = [{\n    Header: 'Secuencial',\n    accessor: 'ID'\n  }, {\n    Header: 'Nombre',\n    accessor: 'Name'\n  }, {\n    Header: 'Estado',\n    accessor: 'Status'\n  }, {\n    Header: \"Valor\",\n    accessor: 'Value'\n  }, {\n    Header: \"Acciones\",\n    accessor: \"actions\",\n    sortable: false,\n    filterable: false\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, __jsx(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, __jsx(CardTitle, {\n    tag: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"Tipos de reporte \")), __jsx(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, __jsx(ReactTable, {\n    data: data,\n    columns: columns,\n    filterable: true,\n    resizable: false,\n    defaultPageSize: 10,\n    showPaginationBottom: true,\n    className: \"-striped -highlight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  })))))), modalAction());\n};\n\nexport default content;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/pages/tiposReporte/content.jsx"],"names":["React","ReactTable","Row","Col","Card","CardHeader","CardTitle","CardBody","Button","Label","Input","Badge","PersonalModal","useForm","Controller","getData","ActualizaS","content","props","useState","openModal","setOpenModal","data","setData","handleSubmit","errors","control","reset","Actualiza","useEffect","length","id","undefined","modalAction","dato","filter","elem","ID","flag","Name","color","Status","valor","required","Value","columns","Header","accessor","sortable","filterable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Badge } from 'reactstrap';\nimport PersonalModal from '../../components/Modal/modal';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getData, ActualizaS } from './function';\n\nconst content = (props) => {\n    const [openModal, setOpenModal] = React.useState(false);\n    const [data, setData] = React.useState([]);\n    const { handleSubmit, errors, control, reset } = useForm();\n    const Actualiza = async data => ActualizaS(data, setData);\n\n    React.useEffect(() => {\n        if (data.length === 0) {\n            getData({ setData, setOpenModal });\n        }\n        setOpenModal(false);\n    }, [data])\n\n    React.useEffect(() => {\n        if (openModal.id === undefined) {\n            reset();\n        }\n    }, [openModal])\n\n    const modalAction = () => {\n        let dato = data.filter(elem => elem.ID === openModal.id)[0];\n        if (dato === undefined) return \"\"\n        return (\n            <PersonalModal modal={openModal.flag} setModal={setOpenModal} title={dato.Name} size='sm'>\n                <Row>\n                    <Col sm={12}>\n                        <Label style={{ color: \"black\" }}>Nombre :</Label>\n                        <span> {dato.Name} </span>\n                    </Col>\n                    <Col sm={12}>\n                        <Label style={{ color: \"black\" }}>Nombre :</Label>\n                        <span> {dato.Status} </span>\n                    </Col>\n                    <Col sm={12}>\n                        <form onSubmit={handleSubmit(Actualiza)}>\n                            <Label for=\"valor\" style={{ color: \"black\" }}>Valor :</Label>\n                            {errors.valor && <Badge color=\"warning\" pill>El campo es requerido</Badge>}\n                            <Controller\n                                as={Input}\n                                control={control}\n                                type=\"hidden\"\n                                name=\"id\"\n                                defaultValue={dato.ID}\n                            />\n                            <Controller\n                                as={Input}\n                                control={control}\n                                type=\"number\"\n                                name=\"valor\"\n                                placeholder=\"valor\"\n                                autoComplete=\"off\"\n                                rules={{\n                                    required: true\n                                }}\n                                defaultValue={dato.Value}\n                            />\n                            <center>\n                                <Button type=\"submit\" className=\"btn-round\" color=\"danger\" size=\"lg\" >\n                                    {\"Actualizar\"}\n                                </Button>\n                            </center>\n                        </form>\n                    </Col>\n                </Row>\n            </PersonalModal >\n        )\n    }\n\n    const columns = [\n        {\n            Header: 'Secuencial',\n            accessor: 'ID'\n        }, {\n            Header: 'Nombre',\n            accessor: 'Name',\n        }, {\n            Header: 'Estado',\n            accessor: 'Status',\n        }, {\n            Header: \"Valor\",\n            accessor: 'Value'\n        }, {\n            Header: \"Acciones\",\n            accessor: \"actions\",\n            sortable: false,\n            filterable: false\n        }\n    ]\n\n    return (\n        <>\n            <div className=\"content\">\n                <Row>\n                    <Col xs={12} md={12}>\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h3\">{\"Tipos de reporte \"}</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                                <ReactTable\n                                    data={data}\n                                    columns={columns}\n                                    filterable\n                                    resizable={false}\n                                    defaultPageSize={10}\n                                    showPaginationBottom\n                                    className=\"-striped -highlight\"\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n            {modalAction()}\n        </>\n    )\n}\n\nexport default content;"]},"metadata":{},"sourceType":"module"}