{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/UT/Dashboard-BI/components/Navbars/AuthNavbar.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport Link from 'next/link';\nimport { Collapse, NavbarBrand, Navbar, NavItem, Nav, Container } from \"reactstrap\";\n\nvar AuthNavbar = function AuthNavbar(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      collapseOpen = _React$useState2[0],\n      setcollapseOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"navbar-transparent\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      color = _React$useState4[0],\n      setcolor = _React$useState4[1];\n\n  React.useEffect(function () {\n    window.addEventListener(\"resize\", updateColor);\n  });\n\n  var updateColor = function updateColor() {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n\n  var toggleCollapse = function toggleCollapse() {\n    setcollapseOpen(!collapseOpen);\n\n    if (!collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    className: classnames(\"navbar-absolute fixed-top\", color),\n    expand: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(NavbarBrand, {\n    href: \"#carlos\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, props.brandText)), __jsx(\"button\", {\n    \"aria-controls\": \"navigation-index\",\n    \"aria-expanded\": false,\n    \"aria-label\": \"Toggle navigation\",\n    className: \"navbar-toggler\",\n    \"data-toggle\": \"collapse\",\n    type: \"button\",\n    onClick: toggleCollapse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), __jsx(Collapse, {\n    isOpen: collapseOpen,\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(Nav, {\n    navbar: true,\n    className: \"ml-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default AuthNavbar;","map":{"version":3,"sources":["/var/www/html/UT/Dashboard-BI/components/Navbars/AuthNavbar.jsx"],"names":["React","classnames","Link","Collapse","NavbarBrand","Navbar","NavItem","Nav","Container","AuthNavbar","props","useState","collapseOpen","setcollapseOpen","color","setcolor","useEffect","window","addEventListener","updateColor","innerWidth","toggleCollapse","e","preventDefault","brandText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport Link from 'next/link';\nimport {\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  Nav,\n  Container\n} from \"reactstrap\";\n\nconst AuthNavbar = (props) => {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  })\n\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\")\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n\n  const toggleCollapse = () => {\n    setcollapseOpen(!collapseOpen);\n    if (!collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        className={classnames(\"navbar-absolute fixed-top\", color)}\n        expand=\"lg\"\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <NavbarBrand href=\"#carlos\" onClick={e => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <button\n            aria-controls=\"navigation-index\"\n            aria-expanded={false}\n            aria-label=\"Toggle navigation\"\n            className=\"navbar-toggler\"\n            data-toggle=\"collapse\"\n            type=\"button\"\n            onClick={toggleCollapse}\n          >\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </button>\n          <Collapse isOpen={collapseOpen} navbar>\n            <Nav navbar className=\"ml-auto\">\n              {/* <NavItem>\n                <Link href=\"/login\">\n                  <a className=\"nav-link\">\n                    <i className=\"tim-icons icon-single-02\" /> Ingreso\n                  </a>\n                </Link>\n              </NavItem>\n              <NavItem>\n                <Link href=\"/register\">\n                  <a className=\"nav-link\">\n                    <i className=\"tim-icons icon-laptop\" /> Registro\n                  </a>\n                </Link>\n              </NavItem> */}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default AuthNavbar;\n"]},"metadata":{},"sourceType":"module"}