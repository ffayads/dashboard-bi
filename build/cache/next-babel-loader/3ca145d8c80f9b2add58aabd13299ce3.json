{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, FormGroup, Label, Input, Nav, NavItem, NavLink, TabPane, TabContent, Badge } from 'reactstrap';\nimport PersonalModal from '../../components/Modal/modal';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getData, ApruebaS, RechazaS } from './function';\n\nvar content = function content(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openModal = _React$useState2[0],\n      setOpenModal = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      option = _React$useState4[0],\n      setOption = _React$useState4[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      control = _useForm.control,\n      reset = _useForm.reset;\n\n  var _useForm2 = useForm(),\n      handleSubmit2 = _useForm2.handleSubmit,\n      errors2 = _useForm2.errors,\n      control2 = _useForm2.control,\n      reset2 = _useForm2.reset;\n\n  var _useForm3 = useForm(),\n      handleSubmit3 = _useForm3.handleSubmit,\n      errors3 = _useForm3.errors,\n      control3 = _useForm3.control,\n      reset3 = _useForm3.reset;\n\n  var Aprueba = function Aprueba(data) {\n    return ApruebaS(data, setData);\n  };\n\n  var Rechaza = function Rechaza(data) {\n    return RechazaS(data, setData);\n  };\n\n  var Finaliza = function Finaliza(data) {\n    return FinalizaS(data, setData);\n  };\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      data = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (data.length === 0) {\n      getData({\n        setData: setData,\n        setOpenModal: setOpenModal\n      });\n    }\n\n    setOpenModal(false);\n  }, [data]);\n  React.useEffect(function () {\n    if (openModal.id === undefined) {\n      reset();\n      reset2();\n      reset3();\n      setOption(\"\");\n    }\n  }, [openModal]);\n\n  var modalAction = function modalAction() {\n    var dato = data.filter(function (elem) {\n      return elem.ID === openModal.id;\n    })[0];\n    if (dato === undefined) return \"\";\n    return __jsx(PersonalModal, {\n      modal: openModal.flag,\n      setModal: setOpenModal,\n      title: \"Acciones para la solicitud No. \" + dato.ID,\n      size: \"lg\"\n    }, __jsx(Row, null, __jsx(Col, {\n      sm: 4\n    }, __jsx(Nav, {\n      pills: true,\n      className: \"nav-pills-primary flex-column\"\n    }, dato.StatusId !== 1 ? __jsx(React.Fragment, null, __jsx(NavItem, null, __jsx(NavLink, {\n      className: option === \"ht1\" ? \"active\" : \"\",\n      style: {\n        background: option === \"ht1\" ? \"green\" : \"\"\n      },\n      onClick: function onClick() {\n        return setOption(\"ht1\");\n      }\n    }, \"Aprobar\")), __jsx(NavItem, null, __jsx(NavLink, {\n      className: option === \"ht2\" ? \"active\" : \"\",\n      style: {\n        background: option === \"ht2\" ? \"red\" : \"\"\n      },\n      onClick: function onClick() {\n        return setOption(\"ht2\");\n      }\n    }, \"Rechazar\"))) : \"\", dato.StatusId === 1 ? __jsx(NavItem, null, __jsx(NavLink, {\n      className: option === \"ht3\" ? \"active\" : \"\",\n      style: {\n        background: option === \"ht3\" ? \"#ff9900\" : \"\"\n      },\n      onClick: function onClick() {\n        return setOption(\"ht3\");\n      }\n    }, \"Finalizar\")) : \"\")), __jsx(Col, {\n      sm: 8\n    }, __jsx(TabContent, {\n      activeTab: option,\n      className: \"tab-space\"\n    }, __jsx(TabPane, {\n      tabId: \"ht1\"\n    }, __jsx(Col, {\n      sm: 12,\n      style: {\n        color: \"black\"\n      }\n    }, __jsx(\"p\", null, \" \", __jsx(\"b\", null, \"Fecha : \"), dato.Date)), __jsx(Col, {\n      sm: 12\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit(Aprueba)\n    }, __jsx(FormGroup, null, __jsx(Label, {\n      \"for\": \"nota\",\n      style: {\n        color: \"black\"\n      }\n    }, \"Nota :\"), errors.nota1 && __jsx(Badge, {\n      color: \"warning\",\n      pill: true\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: dato.ID\n    }), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"textarea\",\n      name: \"nota1\",\n      placeholder: \"Nota\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: \"\"\n    }), __jsx(\"center\", null, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      color: \"success\",\n      size: \"lg\",\n      style: {\n        background: \"green\"\n      }\n    }, \"Aprobar\")))))), __jsx(TabPane, {\n      tabId: \"ht2\"\n    }, __jsx(Col, {\n      sm: 12,\n      style: {\n        color: \"black\"\n      }\n    }, __jsx(\"p\", null, \" \", __jsx(\"b\", null, \"Fecha : \"), dato.Date)), __jsx(Col, {\n      sm: 12\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit2(Rechaza)\n    }, __jsx(FormGroup, null, __jsx(Label, {\n      \"for\": \"nota\",\n      style: {\n        color: \"black\"\n      }\n    }, \"Nota :\"), errors2.nota2 && __jsx(Badge, {\n      color: \"warning\",\n      pill: true\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control2,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: openModal.id\n    }), __jsx(Controller, {\n      as: Input,\n      control: control2,\n      type: \"textarea\",\n      name: \"nota2\",\n      placeholder: \"Nota\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: \"\"\n    }), __jsx(\"center\", null, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      color: \"danger\",\n      size: \"lg\"\n    }, \"Rechazar\")))))), __jsx(TabPane, {\n      tabId: \"ht3\"\n    }, __jsx(Col, {\n      sm: 12,\n      style: {\n        color: \"black\"\n      }\n    }, __jsx(\"p\", null, \" \", __jsx(\"b\", null, \"Fecha : \"), dato.Date)), __jsx(Col, {\n      sm: 12\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit3(Finaliza)\n    }, __jsx(FormGroup, null, __jsx(Label, {\n      \"for\": \"nota\",\n      style: {\n        color: \"black\"\n      }\n    }, \"Nota :\"), errors3.nota3 && __jsx(Badge, {\n      color: \"warning\",\n      pill: true\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control3,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: dato.id\n    }), __jsx(Controller, {\n      as: Input,\n      control: control3,\n      type: \"textarea\",\n      name: \"nota3\",\n      placeholder: \"Nota\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: \"\"\n    }), __jsx(\"center\", null, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      style: {\n        background: \"#ff9900\"\n      },\n      size: \"lg\"\n    }, \"Finalizar\"))))))))));\n  };\n\n  var columns = [{\n    Header: 'Numero',\n    accessor: 'ID'\n  }, {\n    Header: 'Fecha',\n    accessor: 'Date'\n  }, {\n    Header: 'Estado',\n    accessor: 'Status'\n  }, {\n    Header: \"Acciones\",\n    accessor: \"actions\",\n    sortable: false,\n    filterable: false\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    md: 12\n  }, __jsx(Card, null, __jsx(CardHeader, null, __jsx(CardTitle, {\n    tag: \"h3\"\n  }, \"Solicitudes   \")), __jsx(CardBody, null, __jsx(ReactTable, {\n    data: data,\n    columns: columns,\n    filterable: true,\n    resizable: false,\n    defaultPageSize: 10,\n    showPaginationBottom: true,\n    className: \"-striped -highlight\"\n  })))))), modalAction());\n};\n\nexport default content;","map":null,"metadata":{},"sourceType":"module"}