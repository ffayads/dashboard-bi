{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/pages/tiposReporte/function.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\n\nvar Actions = function Actions(props) {\n  return __jsx(\"div\", {\n    className: \"actions-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      props.setOpenModal({\n        flag: true,\n        id: props.data\n      });\n    },\n    color: \"info\",\n    size: \"sm\",\n    className: \"btn-icon btn-round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"tim-icons icon-alert-circle-exc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport var getData = function getData(props) {\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          axios.get(\"authAdmin/typeReports/GetTypeReports\", {\n            id: \"\"\n          }).then(function (response) {\n            if (response.status) {\n              var data = [];\n              response.data.data.typeReports.map(function (elem) {\n                elem['Status'] = elem.Status === true ? \"ACTIVO\" : \"INACTIVO\";\n                elem['actions'] = Actions({\n                  setOpenModal: props.setOpenModal,\n                  data: elem.ID\n                });\n                data.push(elem);\n              });\n              props.setData(data);\n            } else {\n              swal(response.msg, \"\", \"warning\");\n            }\n          })[\"catch\"](function (error) {\n            swal(\"Algo inesperado paso!\", \"Intenta mas tarde\", \"warning\");\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var ActualizaS = function ActualizaS(data, setData) {\n  return _regeneratorRuntime.async(function ActualizaS$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          swal({\n            title: \"Esta seguro?\",\n            text: \"Esta por actualizar el valor\",\n            icon: \"warning\",\n            buttons: [\"Cancelar!\", \"Si, Actualizar!\"]\n          }).then(function (flag) {\n            if (flag === true) {\n              axios.post(\"authAdmin/typeReports/UpdateTypeReports\", {\n                id: data.id,\n                value: parseInt(data.valor)\n              }).then(function (response) {\n                swal(\"Exito!\", \"Se guardo / actualizo con exito\", \"success\");\n                setData([]);\n              })[\"catch\"](function (error) {\n                swal(\"Algo inesperado paso!\", \"Intenta mas tarde\", \"warning\");\n              });\n            }\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Data = function Data() {\n  return \"Data\";\n};\n\nexport default Data;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/pages/tiposReporte/function.jsx"],"names":["React","swal","axios","Button","Actions","props","setOpenModal","flag","id","data","getData","get","then","response","status","typeReports","map","elem","Status","ID","push","setData","msg","error","ActualizaS","title","text","icon","buttons","post","value","parseInt","valor","Data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\n\nconst Actions = (props) => {\n    return (\n        <div className=\"actions-right\">\n            <Button\n                onClick={() => { props.setOpenModal({ flag: true, id: props.data }); }}\n                color=\"info\"\n                size=\"sm\"\n                className=\"btn-icon btn-round\"\n            >\n                <i className=\"tim-icons icon-alert-circle-exc\" />\n            </Button>\n        </div >\n    )\n}\n\nexport const getData = async (props) => {\n    axios.get(\"authAdmin/typeReports/GetTypeReports\", {\n        id: \"\",\n    }).then((response) => {\n        if (response.status) {\n            let data = [];\n            response.data.data.typeReports.map((elem) => {\n                elem['Status'] = elem.Status === true ? \"ACTIVO\" : \"INACTIVO\";\n                elem['actions'] = Actions({ setOpenModal: props.setOpenModal, data: elem.ID })\n                data.push(elem);\n            });\n            props.setData(data);\n        } else {\n            swal(response.msg, \"\", \"warning\");\n        }\n    }).catch(function (error) {\n        swal(\"Algo inesperado paso!\", \"Intenta mas tarde\", \"warning\")\n    })\n}\n\nexport const ActualizaS = async (data, setData) => {\n    swal({\n        title: \"Esta seguro?\",\n        text: \"Esta por actualizar el valor\",\n        icon: \"warning\",\n        buttons: [\"Cancelar!\", \"Si, Actualizar!\"],\n    }).then((flag) => {\n        if (flag === true) {\n            axios.post(\"authAdmin/typeReports/UpdateTypeReports\", {\n                id: data.id,\n                value: parseInt(data.valor)\n            }).then(function (response) {\n                swal(\"Exito!\", \"Se guardo / actualizo con exito\", \"success\");\n                setData([]);\n            }).catch(function (error) {\n                swal(\"Algo inesperado paso!\", \"Intenta mas tarde\", \"warning\")\n            })\n        }\n    });\n\n}\nconst Data = () =>{\n    return(\n        \"Data\"\n    )\n}\n\nexport default Data;"]},"metadata":{},"sourceType":"module"}