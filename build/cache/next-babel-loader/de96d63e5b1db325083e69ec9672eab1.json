{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/pages/visar/content.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, FormGroup, Label, Input, Nav, NavItem, NavLink, TabPane, TabContent, Badge } from 'reactstrap';\nimport PersonalModal from '../../components/Modal/modal';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getData, ApruebaS, RechazaS } from './function';\n\nconst content = props => {\n  const [openModal, setOpenModal] = React.useState(false);\n  const [option, setOption] = React.useState(\"\");\n  const {\n    handleSubmit,\n    errors,\n    control,\n    reset\n  } = useForm();\n  const {\n    handleSubmit: handleSubmit2,\n    errors: errors2,\n    control: control2,\n    reset: reset2\n  } = useForm();\n  const {\n    handleSubmit: handleSubmit3,\n    errors: errors3,\n    control: control3,\n    reset: reset3\n  } = useForm();\n\n  const Aprueba = data => ApruebaS(data, setData);\n\n  const Rechaza = data => RechazaS(data, setData);\n\n  const Finaliza = data => FinalizaS(data, setData);\n\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    if (data.length === 0) {\n      getData({\n        setData,\n        setOpenModal\n      });\n    }\n\n    setOpenModal(false);\n  }, [data]);\n  React.useEffect(() => {\n    if (openModal.id === undefined) {\n      reset();\n      reset2();\n      reset3();\n      setOption(\"\");\n    }\n  }, [openModal]);\n\n  const modalAction = () => {\n    let dato = data.filter(elem => elem.ID === openModal.id)[0];\n    if (dato === undefined) return \"\";\n    return __jsx(PersonalModal, {\n      modal: openModal.flag,\n      setModal: setOpenModal,\n      title: \"Acciones para la solicitud No. \" + dato.ID,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, __jsx(Nav, {\n      pills: true,\n      className: \"nav-pills-primary flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, dato.StatusId !== 1 ? __jsx(React.Fragment, null, __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }, __jsx(NavLink, {\n      className: option === \"ht1\" ? \"active\" : \"\",\n      style: {\n        background: option === \"ht1\" ? \"green\" : \"\"\n      },\n      onClick: () => setOption(\"ht1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }\n    }, \"Aprobar\")), __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }\n    }, __jsx(NavLink, {\n      className: option === \"ht2\" ? \"active\" : \"\",\n      style: {\n        background: option === \"ht2\" ? \"red\" : \"\"\n      },\n      onClick: () => setOption(\"ht2\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 45\n      }\n    }, \"Rechazar\"))) : \"\", dato.StatusId === 1 ? __jsx(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, __jsx(NavLink, {\n      className: option === \"ht3\" ? \"active\" : \"\",\n      style: {\n        background: option === \"ht3\" ? \"#ff9900\" : \"\"\n      },\n      onClick: () => setOption(\"ht3\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }, \"Finalizar\")) : \"\")), __jsx(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, __jsx(TabContent, {\n      activeTab: option,\n      className: \"tab-space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, __jsx(TabPane, {\n      tabId: \"ht1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, __jsx(Col, {\n      sm: 12,\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \" \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, \"Fecha : \"), dato.Date)), __jsx(Col, {\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit(Aprueba),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, __jsx(Label, {\n      for: \"nota\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, \"Nota :\"), errors.nota1 && __jsx(Badge, {\n      color: \"warning\",\n      pill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 62\n      }\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: dato.ID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 45\n      }\n    }), __jsx(Controller, {\n      as: Input,\n      control: control,\n      type: \"textarea\",\n      name: \"nota1\",\n      placeholder: \"Nota\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }), __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      color: \"success\",\n      size: \"lg\",\n      style: {\n        background: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, \"Aprobar\")))))), __jsx(TabPane, {\n      tabId: \"ht2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, __jsx(Col, {\n      sm: 12,\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, \" \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, \"Fecha : \"), dato.Date)), __jsx(Col, {\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit2(Rechaza),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, __jsx(Label, {\n      for: \"nota\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, \"Nota :\"), errors2.nota2 && __jsx(Badge, {\n      color: \"warning\",\n      pill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 63\n      }\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control2,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: openModal.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }), __jsx(Controller, {\n      as: Input,\n      control: control2,\n      type: \"textarea\",\n      name: \"nota2\",\n      placeholder: \"Nota\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 45\n      }\n    }), __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      color: \"danger\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 49\n      }\n    }, \"Rechazar\")))))), __jsx(TabPane, {\n      tabId: \"ht3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, __jsx(Col, {\n      sm: 12,\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, \" \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    }, \"Fecha : \"), dato.Date)), __jsx(Col, {\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit3(Finaliza),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, __jsx(Label, {\n      for: \"nota\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }, \"Nota :\"), errors3.nota3 && __jsx(Badge, {\n      color: \"warning\",\n      pill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 63\n      }\n    }, \"El campo es requerido\"), __jsx(Controller, {\n      as: Input,\n      control: control3,\n      type: \"hidden\",\n      name: \"id\",\n      defaultValue: dato.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    }), __jsx(Controller, {\n      as: Input,\n      control: control3,\n      type: \"textarea\",\n      name: \"nota3\",\n      placeholder: \"Nota\",\n      autoComplete: \"off\",\n      rules: {\n        required: true\n      },\n      defaultValue: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }\n    }), __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn-round\",\n      style: {\n        background: \"#ff9900\"\n      },\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 49\n      }\n    }, \"Finalizar\"))))))))));\n  };\n\n  const columns = [{\n    Header: 'Numero',\n    accessor: 'ID'\n  }, {\n    Header: 'Fecha',\n    accessor: 'Date'\n  }, {\n    Header: 'Estado',\n    accessor: 'Status'\n  }, {\n    Header: \"Acciones\",\n    accessor: \"actions\",\n    sortable: false,\n    filterable: false\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, __jsx(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, __jsx(CardTitle, {\n    tag: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, \"Solicitudes   \")), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, __jsx(ReactTable, {\n    data: data,\n    columns: columns,\n    filterable: true,\n    resizable: false,\n    defaultPageSize: 10,\n    showPaginationBottom: true,\n    className: \"-striped -highlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  })))))), modalAction());\n};\n\nexport default content;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/pages/visar/content.jsx"],"names":["React","ReactTable","Row","Col","Card","CardHeader","CardTitle","CardBody","Button","FormGroup","Label","Input","Nav","NavItem","NavLink","TabPane","TabContent","Badge","PersonalModal","useForm","Controller","getData","ApruebaS","RechazaS","content","props","openModal","setOpenModal","useState","option","setOption","handleSubmit","errors","control","reset","handleSubmit2","errors2","control2","reset2","handleSubmit3","errors3","control3","reset3","Aprueba","data","setData","Rechaza","Finaliza","FinalizaS","useEffect","length","id","undefined","modalAction","dato","filter","elem","ID","flag","StatusId","background","color","Date","nota1","required","nota2","nota3","columns","Header","accessor","sortable","filterable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactTable from 'react-table-v6';\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button, FormGroup, Label, Input, Nav, NavItem, NavLink, TabPane, TabContent, Badge } from 'reactstrap';\nimport PersonalModal from '../../components/Modal/modal';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getData, ApruebaS, RechazaS } from './function';\n\nconst content = (props) => {\n    const [openModal, setOpenModal] = React.useState(false);\n    const [option, setOption] = React.useState(\"\");\n    const { handleSubmit, errors, control, reset } = useForm();\n    const { handleSubmit: handleSubmit2, errors: errors2, control: control2, reset: reset2 } = useForm();\n    const { handleSubmit: handleSubmit3, errors: errors3, control: control3, reset: reset3 } = useForm();\n    const Aprueba = data => ApruebaS(data, setData);\n    const Rechaza = data => RechazaS(data, setData);\n    const Finaliza = data => FinalizaS(data, setData);\n    const [data, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        if (data.length === 0) {\n            getData({ setData, setOpenModal });\n        }\n        setOpenModal(false);\n    }, [data])\n\n    React.useEffect(() => {\n        if (openModal.id === undefined) {\n            reset();\n            reset2();\n            reset3();\n            setOption(\"\");\n        }\n    }, [openModal])\n\n    const modalAction = () => {\n        let dato = data.filter(elem => elem.ID === openModal.id)[0];\n        if (dato === undefined) return \"\"\n        return (\n            <PersonalModal modal={openModal.flag} setModal={setOpenModal} title={\"Acciones para la solicitud No. \" + dato.ID} size='lg'>\n                <Row>\n                    <Col sm={4}>\n                        <Nav pills className=\"nav-pills-primary flex-column\">\n                            {\n                                dato.StatusId !== 1 ?\n                                    <>\n                                        <NavItem>\n                                            <NavLink\n                                                className={option === \"ht1\" ? \"active\" : \"\"}\n                                                style={{ background: option === \"ht1\" ? \"green\" : \"\" }}\n                                                onClick={() => setOption(\"ht1\")}\n                                            >\n                                                {\"Aprobar\"}\n                                            </NavLink>\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink\n                                                className={option === \"ht2\" ? \"active\" : \"\"}\n                                                style={{ background: option === \"ht2\" ? \"red\" : \"\" }}\n                                                onClick={() => setOption(\"ht2\")}\n                                            >\n                                                {\"Rechazar\"}\n                                            </NavLink>\n                                        </NavItem>\n                                    </>\n                                    : \"\"\n                            }\n                            {\n                                dato.StatusId === 1 ?\n                                    <NavItem>\n                                        <NavLink\n                                            className={option === \"ht3\" ? \"active\" : \"\"}\n                                            style={{ background: option === \"ht3\" ? \"#ff9900\" : \"\" }}\n                                            onClick={() => setOption(\"ht3\")}\n                                        >\n                                            {\"Finalizar\"}\n                                        </NavLink>\n                                    </NavItem>\n                                    : \"\"\n                            }\n                        </Nav>\n                    </Col>\n                    <Col sm={8}>\n                        <TabContent activeTab={option} className=\"tab-space\">\n                            <TabPane tabId=\"ht1\">\n                                <Col sm={12} style={{ color: \"black\" }}>\n                                    <p> <b>{\"Fecha : \"}</b>{dato.Date}</p>\n                                </Col>\n                                <Col sm={12}>\n                                    <form onSubmit={handleSubmit(Aprueba)}>\n                                        <FormGroup>\n                                            <Label for=\"nota\" style={{ color: \"black\" }}>Nota :</Label>\n                                            {errors.nota1 && <Badge color=\"warning\" pill>El campo es requerido</Badge>}\n                                            <Controller\n                                                as={Input}\n                                                control={control}\n                                                type=\"hidden\"\n                                                name=\"id\"\n                                                defaultValue={dato.ID}\n                                            />\n                                            <Controller\n                                                as={Input}\n                                                control={control}\n                                                type=\"textarea\"\n                                                name=\"nota1\"\n                                                placeholder=\"Nota\"\n                                                autoComplete=\"off\"\n                                                rules={{\n                                                    required: true\n                                                }}\n                                                defaultValue=\"\"\n                                            />\n                                            <center>\n                                                <Button type=\"submit\" className=\"btn-round\" color=\"success\" size=\"lg\" style={{ background: \"green\" }} >\n                                                    {\"Aprobar\"}\n                                                </Button>\n                                            </center>\n                                        </FormGroup>\n                                    </form>\n                                </Col>\n                            </TabPane>\n                            <TabPane tabId=\"ht2\">\n                                <Col sm={12} style={{ color: \"black\" }}>\n                                    <p> <b>{\"Fecha : \"}</b>{dato.Date}</p>\n                                </Col>\n                                <Col sm={12}>\n                                    <form onSubmit={handleSubmit2(Rechaza)}>\n                                        <FormGroup>\n                                            <Label for=\"nota\" style={{ color: \"black\" }}>Nota :</Label>\n                                            {errors2.nota2 && <Badge color=\"warning\" pill>El campo es requerido</Badge>}\n                                            <Controller\n                                                as={Input}\n                                                control={control2}\n                                                type=\"hidden\"\n                                                name=\"id\"\n                                                defaultValue={openModal.id}\n                                            />\n                                            <Controller\n                                                as={Input}\n                                                control={control2}\n                                                type=\"textarea\"\n                                                name=\"nota2\"\n                                                placeholder=\"Nota\"\n                                                autoComplete=\"off\"\n                                                rules={{\n                                                    required: true\n                                                }}\n                                                defaultValue=\"\"\n                                            />\n                                            <center>\n                                                <Button type=\"submit\" className=\"btn-round\" color=\"danger\" size=\"lg\" >\n                                                    {\"Rechazar\"}\n                                                </Button>\n                                            </center>\n                                        </FormGroup>\n                                    </form>\n                                </Col>\n                            </TabPane>\n                            <TabPane tabId=\"ht3\">\n                                <Col sm={12} style={{ color: \"black\" }}>\n                                    <p> <b>{\"Fecha : \"}</b>{dato.Date}</p>\n                                </Col>\n                                <Col sm={12}>\n                                    <form onSubmit={handleSubmit3(Finaliza)}>\n                                        <FormGroup>\n                                            <Label for=\"nota\" style={{ color: \"black\" }}>Nota :</Label>\n                                            {errors3.nota3 && <Badge color=\"warning\" pill>El campo es requerido</Badge>}\n                                            <Controller\n                                                as={Input}\n                                                control={control3}\n                                                type=\"hidden\"\n                                                name=\"id\"\n                                                defaultValue={dato.id}\n                                            />\n                                            <Controller\n                                                as={Input}\n                                                control={control3}\n                                                type=\"textarea\"\n                                                name=\"nota3\"\n                                                placeholder=\"Nota\"\n                                                autoComplete=\"off\"\n                                                rules={{\n                                                    required: true\n                                                }}\n                                                defaultValue=\"\"\n                                            />\n                                            <center>\n                                                <Button type=\"submit\" className=\"btn-round\" style={{ background: \"#ff9900\" }} size=\"lg\" >\n                                                    {\"Finalizar\"}\n                                                </Button>\n                                            </center>\n                                        </FormGroup>\n                                    </form>\n                                </Col>\n                            </TabPane>\n                        </TabContent>\n                    </Col>\n                </Row>\n            </PersonalModal>\n        )\n    }\n\n    const columns = [\n        {\n            Header: 'Numero',\n            accessor: 'ID'\n        }, {\n            Header: 'Fecha',\n            accessor: 'Date'\n        }, {\n            Header: 'Estado',\n            accessor: 'Status',\n        }, {\n            Header: \"Acciones\",\n            accessor: \"actions\",\n            sortable: false,\n            filterable: false\n        }\n    ]\n\n    return (\n        <>\n            <div className=\"content\">\n                <Row>\n                    <Col xs={12} md={12}>\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h3\">{\"Solicitudes   \"}</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                                <ReactTable\n                                    data={data}\n                                    columns={columns}\n                                    filterable\n                                    resizable={false}\n                                    defaultPageSize={10}\n                                    showPaginationBottom\n                                    className=\"-striped -highlight\"\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n            {modalAction()}\n        </>\n    )\n}\n\nexport default content;"]},"metadata":{},"sourceType":"module"}