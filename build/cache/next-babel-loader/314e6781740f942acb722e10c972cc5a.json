{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Via-Dashboard/via40-dashboard/components/Sidebar/Sidebar.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Link from 'next/link';\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Nav, Collapse } from \"reactstrap\";\nvar ps;\n\nconst Sidebar = props => {\n  const {\n    activeColor,\n    logo,\n    closeSidebar\n  } = props;\n  let logoImg = null;\n  let logoText = null;\n  let sidebar = React.useRef();\n  let [state, setState] = React.useState();\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebar);\n    }\n\n    let _state = getCollapseStates(props.routes);\n\n    if (state === undefined) setState(_state);\n  });\n\n  const getCollapseStates = routes => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = _objectSpread({\n          [prop.state]: getCollapseInitialState(prop.views)\n        }, getCollapseStates(prop.views), {}, initialState);\n      }\n\n      return null;\n    });\n    return initialState;\n  };\n\n  const getCollapseInitialState = routes => {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const createLinks = routes => {\n    const {\n      rtlActive\n    } = props;\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return __jsx(\"li\", {\n          className: getCollapseInitialState(prop.views) ? \"active\" : \"\",\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          href: \"#carlos\",\n          \"data-toggle\": \"collapse\",\n          \"aria-expanded\": state[prop.state],\n          onClick: e => {\n            e.preventDefault();\n            setState(st);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, prop.icon !== undefined ? __jsx(React.Fragment, null, __jsx(\"i\", {\n          className: prop.icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }\n        }), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }\n        }, rtlActive ? prop.rtlName : prop.name, __jsx(\"b\", {\n          className: \"caret\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }))) : __jsx(React.Fragment, null, __jsx(\"span\", {\n          className: \"sidebar-mini-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        }, rtlActive ? prop.rtlMini : prop.mini), __jsx(\"span\", {\n          className: \"sidebar-normal\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, rtlActive ? prop.rtlName : prop.name, __jsx(\"b\", {\n          className: \"caret\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }\n        })))), __jsx(Collapse, {\n          isOpen: state[prop.state],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }, __jsx(\"ul\", {\n          className: \"nav\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }, createLinks(prop.views))));\n      }\n\n      return __jsx(\"li\", {\n        className: activeRoute(prop.path),\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        href: prop.path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, prop.icon !== undefined ? __jsx(\"a\", {\n        onClick: closeSidebar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, __jsx(\"i\", {\n        className: prop.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, rtlActive ? prop.rtlName : prop.name)) : __jsx(React.Fragment, null, __jsx(\"span\", {\n        className: \"sidebar-mini-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, rtlActive ? prop.rtlMini : prop.mini), __jsx(\"span\", {\n        className: \"sidebar-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, rtlActive ? prop.rtlName : prop.name))));\n    });\n  };\n\n  let activeRoute = () => {};\n\n  React.useEffect(() => {\n    activeRoute = routeName => {\n      return window.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    };\n  }, []);\n\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = __jsx(\"a\", {\n        href: logo.outterLink,\n        className: \"simple-text logo-mini\",\n        target: \"_blank\",\n        onClick: closeSidebar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"logo-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: logo.imgSrc,\n        alt: \"react-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      })));\n      logoText = __jsx(\"a\", {\n        href: logo.outterLink,\n        className: \"simple-text logo-normal\",\n        target: \"_blank\",\n        onClick: closeSidebar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, logo.text);\n    } else {\n      logoImg = __jsx(Link, {\n        href: logo.innerLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        onClick: closeSidebar,\n        className: \"simple-text logo-mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"logo-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        src: logo.imgSrc,\n        alt: \"react-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }))));\n      logoText = __jsx(Link, {\n        href: logo.innerLink,\n        className: \"simple-text logo-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        onClick: closeSidebar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, logo.text));\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"sidebar\",\n    data: activeColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"sidebar-wrapper\",\n    ref: sidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, logoImg !== null || logoText !== null ? __jsx(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, logoImg, logoText) : null, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, createLinks(props.routes))));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["/var/www/html/Via-Dashboard/via40-dashboard/components/Sidebar/Sidebar.jsx"],"names":["React","Link","PropTypes","PerfectScrollbar","Nav","Collapse","ps","Sidebar","props","activeColor","logo","closeSidebar","logoImg","logoText","sidebar","useRef","state","setState","useState","useEffect","navigator","platform","indexOf","_state","getCollapseStates","routes","undefined","initialState","map","prop","key","collapse","getCollapseInitialState","views","i","length","window","location","href","path","createLinks","rtlActive","redirect","st","e","preventDefault","icon","rtlName","name","rtlMini","mini","activeRoute","routeName","pathname","outterLink","imgSrc","text","innerLink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from 'next/link';\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Nav, Collapse } from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n\n  const { activeColor, logo, closeSidebar } = props;\n  let logoImg = null;\n  let logoText = null;\n  let sidebar = React.useRef();\n  let [state, setState] = React.useState();\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebar);\n    }\n    let _state = getCollapseStates(props.routes);\n    if (state === undefined) setState(_state);\n  });\n\n\n  const getCollapseStates = (routes) => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: getCollapseInitialState(prop.views),\n          ...getCollapseStates(prop.views),\n          ...initialState\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n\n  const getCollapseInitialState = (routes) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const createLinks = routes => {\n    const { rtlActive } = props;\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <li\n            className={getCollapseInitialState(prop.views) ? \"active\" : \"\"}\n            key={key}\n          >\n            <a\n              href=\"#carlos\"\n              data-toggle=\"collapse\"\n              aria-expanded={state[prop.state]}\n              onClick={e => {\n                e.preventDefault();\n                setState(st);\n              }}\n            >\n              {prop.icon !== undefined ? (\n                <>\n                  <i className={prop.icon} />\n                  <p>\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </p>\n                </>\n              ) : (\n                  <>\n                    <span className=\"sidebar-mini-icon\">\n                      {rtlActive ? prop.rtlMini : prop.mini}\n                    </span>\n                    <span className=\"sidebar-normal\">\n                      {rtlActive ? prop.rtlName : prop.name}\n                      <b className=\"caret\" />\n                    </span>\n                  </>\n                )}\n            </a>\n            <Collapse isOpen={state[prop.state]}>\n              <ul className=\"nav\">{createLinks(prop.views)}</ul>\n            </Collapse>\n          </li>\n        );\n      }\n      return (\n        <li className={activeRoute(prop.path)} key={key}>\n          <Link href={prop.path} >\n            {prop.icon !== undefined ? (\n              <a onClick={closeSidebar}>\n                <i className={prop.icon} />\n                <p>{rtlActive ? prop.rtlName : prop.name}</p>\n              </a>\n            ) : (\n                <>\n                  <span className=\"sidebar-mini-icon\">\n                    {rtlActive ? prop.rtlMini : prop.mini}\n                  </span>\n                  <span className=\"sidebar-normal\">\n                    {rtlActive ? prop.rtlName : prop.name}\n                  </span>\n                </>\n              )}\n          </Link>\n        </li>\n      );\n    });\n  };\n\n  let activeRoute = () => { }\n  React.useEffect(() => {\n    activeRoute = routeName => {\n      return window.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    };\n  }, []);\n\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={closeSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={closeSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          href={logo.innerLink}\n        >\n          <a onClick={closeSidebar} className=\"simple-text logo-mini\">\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        </Link>\n      );\n      logoText = (\n        <Link\n          href={logo.innerLink}\n          className=\"simple-text logo-normal\"\n        >\n          <a onClick={closeSidebar} >\n            {logo.text}\n          </a>\n        </Link>\n      );\n    }\n  }\n\n  return (\n    <div className=\"sidebar\" data={activeColor}>\n      <div className=\"sidebar-wrapper\" ref={sidebar}>\n        {logoImg !== null || logoText !== null ? (\n          <div className=\"logo\">\n            {logoImg}\n            {logoText}\n          </div>\n        ) : null}\n        <Nav>{createLinks(props.routes)}</Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}